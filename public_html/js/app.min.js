
// __app.js

;( function( $ ) {
	"use strict";

	window.body = $('body');
	window._this = null;

	$.app = {
		
		initSandwich: function()
		{
			this.sandwich.init({
				keyHooks: !0,
				selector: '.js-sandwich-menu',
				wrapper: '.layout-wrapper',
				overlay: '#menu-overlay'
			});
		},

		initSlider: function()
		{
			this.slider.init({
				slider 	: '#slider',
				item 	: '.js-slider-slide',
				timeout : 6000
			});
		},
		
		initSelectTrigger: function()
		{
			body.on('select.close', function(e, select){
				if ($(select).closest('.form__group').length)
				{
					var index = 1, group = $(select).closest('.form__group');

					group.css('z-index', 1);

					if (group.closest('.form__group_items').length)
					{
						group = group.closest('.form__group_items');

						group.css('z-index', 1);
					}
				}
			});

			body.on('select.open', function(e, select){
				if ($(select).closest('.form__group').length)
				{
					var group = $(select).closest('.form__group');

					group.css('z-index', 10000);

					if (group.closest('.form__group_items').length)
					{
						group = group.closest('.form__group_items');

						group.css('z-index', 10000);
					}
				}
			});

			body.on('change', '.js-form-select', function(e){
				if ($(this).closest('.error').length)
				{
					$(this).closest('.error').removeClass('error');
				}
			});
		},

		initSelect: function(group)
		{
			if (typeof(group) == 'undefined')
			{
				$('select').not('.is-system').selectbox();
			}
			else
			{
				group.find('select').not('.is-system').selectbox();
			}

			this.initSelectTrigger();
		},

		initMask: function()
		{
			$(".js-date-watcher").mask("99/99/9999");
			$(".js-phone-watcher").mask("+ 7 (999) 999-99-99");
			$(".js-cartnumber-watcher").mask("999-999-999");
		},
		
		initFastclick: function()
		{
			FastClick.attach(document.body);
		},

		initPopup: function()
		{
			$.popup.init('.js-open-popup', {
				cssPosition: false,
				wrapper: '.layout-wrapper'
			});
		},
		
		initMagnific: function()
		{ 
			if ($('.zoom-group').length)
			{
				$('.zoom-group').find('.zoom-list').each(function(){
					$(this).magnificPopup({
						delegate: '.zoom',
						type: 'image',
				 		preloader: true,
						gallery: {
							enabled: true,
							navigateByImgClick: true,
							tCounter: '%curr% of %total%'
						},
						zoom: {
							enabled: true,
							duration: 300,
							easing: 'ease-in-out',
							opener: function(openerElement) {
								return openerElement.is('img') ? openerElement : openerElement.find('img');
							}
						},
					 	closeOnContentClick: true
					});
				});
			}
			else
			{
				$('.zoom').magnificPopup({
				 	type:'image',
				 	preloader: true,
					gallery: {
						enabled: true
					},
					zoom: {
						enabled: true,
						duration: 300,
						easing: 'ease-in-out',
						opener: function(openerElement) {
							return openerElement.is('img') ? openerElement : openerElement.find('img');
						}
					},
				 	closeOnContentClick: true
				});
			}
		},

		initFancyBox: function()
		{
			if (!is_undefined($.fn.fancybox))
			{
				$('.fancybox').fancybox({
					helpers: {
						overlay: {
						  locked: false
						}
					}
				});

				$('.fancybox-media').fancybox({
					openEffect  : 'none',
					closeEffect : 'none',
					helpers : {
						media : {},
						overlay: {
						  locked: false
						}
					}
				});

				$(".iframe").fancybox({
					'transitionIn'		: 'none',
					'transitionOut'		: 'none',
					'autoScale'     	: false,
					'type'				: 'iframe',
					'width'				: 500,
					'height'			: 500,
					'scrolling'   		: 'no'
				});
				
				$(".various").fancybox({
					maxWidth	: 800,
					maxHeight	: 600,
					fitToView	: false,
					width		: '70%',
					height		: '70%',
					autoSize	: false,
					closeClick	: false,
					openEffect	: 'none',
					closeEffect	: 'none',
					helpers: {
						overlay: {
						  locked: false
						}
					}
				});
			}
		},

		slickCarousel: function()
		{
			if ($('.js-carousel').length && $('.js-carousel').find('.slick-slide').length)
			{
				var count = 4, classname = 'carousel';

				$('.js-carousel').each(function(){
					count = 4;
					classname = 'carousel';

					if ($(this).data('viewcount'))
					{
						count = parseInt($(this).data('viewcount'));
					}

					if ($(this).data('classname'))
					{
						classname = $(this).data('classname');
					}

					$(this).slick({
						infinite: true,
						dots: false,
						draggable: true,
						speed: 170,
						slidesToShow: count,
						slidesToScroll: 1,
						prevArrow: '<button type="button" class="'+classname+'__navigation '+classname+'__navigation_prev slick-prev"></button>',
						nextArrow: '<button type="button" class="'+classname+'__navigation '+classname+'__navigation_next slick-next"></button>',
						responsive: [
							{
								breakpoint: 1024,
								settings: {
									slidesToShow: 3,
									slidesToScroll: 3,
									infinite: true,
									dots: true
								}
							},
							{
								breakpoint: 600,
								settings: {
									slidesToShow: 2,
									slidesToScroll: 2
								}
							},
							{
								breakpoint: 480,
								settings: {
									slidesToShow: 1,
									slidesToScroll: 1
								}
							}
						]
					});
				});
			}
		},

		slickSlider: function()
		{
			if ($('.js-slider').length && $('.js-slider').find('.slick-slide').length)
			{
				var count = 4, classname = 'slider', $slider = '', width = $(window).width(), options = {};

				$('.js-slider').each(function(){
					count = 4;
					classname = 'slider';

					options = {
						infinite: !0,
						dots: !1,
						draggable: !1,
						speed: 300,
						fade: !1,
						autoplay: !1,
						autoplaySpeed: 4500,
						pauseOnHover: !1,
						useTransform: !1,
						variableWidth: !0,
						cssEase: 'ease'
					};
					
					$slider = $(this);

					if ($slider.data('viewcount'))
					{
						count = parseInt($slider.data('viewcount'));
					}

					if ($slider.hasClass('js-slider-calc'))
					{
					 	$slider.find('.slick-slide').css({
					 		'width': width + 'px'
					 	});
					}

					if ($slider.data('classname'))
					{
						classname = $slider.data('classname');
					}
					
					if (!$slider.hasClass('js-disable-navigation'))
					{
						options['prevArrow'] = '<button type="button" class="slider__navigation slider__navigation_prev slick-prev"></button>';
						options['nextArrow'] = '<button type="button" class="slider__navigation slider__navigation_next slick-next"></button>';
					}
					else
					{
						options['arrows'] = !1;
					}

					$slider.slick(options);
				});
			}
		},

		disableHover: function()
		{
			var timer;
			window.addEventListener('scroll', function() {
				clearTimeout(timer);
				
				if(!body.hasClass('disable-hover')) {
					body.addClass('disable-hover');
				}

				timer = setTimeout(function(){
					body.removeClass('disable-hover');
				},500);
			}, false);
		},

		initTooltip: function()
		{
			var tooltip, item;

			body.on('click', function(e){
				if (!$(e.target).hasClass('tooltip') && !$(e.target).hasClass('js-tooltip') && $('.tooltip.show').length)
				{
					$('.tooltip.show').removeClass('animate');

					setTimeout(function(){
						$('.tooltip.show').removeClass('show');
					}, 300);
				}
			});

			body.on('click', '.js-tooltip', function(e){
				e.preventDefault();
				
				item = $(this);

				if ((item.data('tooltip') || item.find('.tooltip').length) && !$(e.target).hasClass('tooltip'))
				{
					tooltip = item.data('tooltip');

					if (!item.find('.tooltip').length)
					{
						var span = document.createElement('span');
						span.className = 'tooltip';
						span.innerHTML = tooltip;

						item.append(span);
					}

					if (item.find('.tooltip').hasClass('show'))
					{
						item.find('.tooltip').removeClass('animate');

						setTimeout(function(){
							item.find('.tooltip').removeClass('show');
						}, 200);
					}
					else
					{
						item.find('.tooltip').addClass('show');

						setTimeout(function(){
							item.find('.tooltip').addClass('animate');
						}, 10);
					}
				}
			});
		},

		toggle: function()
		{
			var selector, block, target, button;

			$('.js-toggle-trigger').each(function(){
				if ($($(this).data('toggle')).length)
				{
					selector = $(this).data('toggle');
					button = $(this);
					block = $(selector);

					body.on('click', function(e){
						target = $(e.target);

						if (!target.closest(selector).length && !target.closest('.js-toggle-trigger').length && block.hasClass('active'))
						{
							button.removeClass('animate');
							block.removeClass('transform');

							setTimeout(function(){
								block.removeClass('active');
							}, 135);
						}
					});		
				}
			});

			body.on('click', '.js-toggle-trigger', function(e){
				e.preventDefault();

				if ($(this).data('toggle'))
				{
					block = $($(this).data('toggle'));
					button = $(this);

					if (block.length)
					{
						if (!block.hasClass('active'))
						{
							button.addClass('animate');
							block.addClass('active');

							setTimeout(function(){
								block.addClass('transform');
							}, 5);
						}
						else
						{
							button.removeClass('animate');
							block.removeClass('transform');

							setTimeout(function(){
								block.removeClass('active');
							}, 135);
						}
					}
					
				}

			});
		},
		
		findJumpElement: function(hash)
		{
			hash = hash.substr(1);

			if ($('a[name="' + hash + '"]').length)
			{
				return $('a[name="' +hash+ '"]').eq(0);
			}
			
			if ($('#' + hash).length)
			{
				return $('#' +hash).eq(0);
			}

			if ($('.screen[data-screen="' + hash + '"]').length)
			{
				return $('.screen[data-screen="' + hash + '"]').eq(0);
			}

			return null;
		},

		hashJump: function()
		{
			_this = this;

			var $jumpto = null;

			if (window.location.hash)
			{
				var hash = window.location.hash;

				$jumpto = _this.findJumpElement(hash + '-anchor');

				if ($jumpto !== null)
				{
					$scrollWrapper.stop().animate({ scrollTop: ($jumpto.offset().top + 25) + 'px' }, 'fast');
				}
			}

			body.on('click', '.j-jumpto', function(e){

				if ($(this).data('anchor'))
				{
					$jumpto = _this.findJumpElement($(this).data('anchor'));
				}
				else if($(this).attr('href'))
				{
					$jumpto = _this.findJumpElement($(this).attr('href'));
				}
				
				if ($jumpto !== null)
				{
					$scrollWrapper.stop().animate({ scrollTop: $jumpto.offset().top + 'px' }, 'medium');
					
					if ($(this).hasClass('j-navigation'))
					{
						$('#navigation').find('.current').removeClass('current');
						$(this).addClass('current');
					}
				}
			});
		},

		updateImage: function()
		{
			body.on('click', '.js-update-image', function(e){
				e.preventDefault();
				$(this).find('img').attr('src', $(this).find('img').attr('src').split('?')[0] + '?u=' + Math.random());
			});
		},

		zoomit: function()
		{
			var wrapper, holder, image;

			body.on('click', '.js-zoom-image', function(e){
				
				e.preventDefault();

				image = $(this).attr('href');

				if ($(this).closest('.js-zoom-wrapper').length)
				{
					wrapper = $(this).closest('.js-zoom-wrapper');
					
					if (wrapper.find('.js-zoom-holder').length)
					{
						holder = wrapper.find('.js-zoom-holder');

						holder.html('');

						wrapper.find('.current').removeClass('current');


						holder.html('<img src="' + image + '" alt="">');

						$(this).addClass('current');
					}
				}

				return !1;
			});
		},

		suggestionsInit: function()
		{
			var api_key = '5ac2fbf1f640b75b78f5d4214ff005ff5303eac8', input = null;

			if ($('.js-suggestions').length)
			{
				$('.js-suggestions').each(function(){
					input = $(this);
					
					if (input.data('type'))
					{
						input.suggestions({
						    serviceUrl: "https://dadata.ru/api/v2",
						    token: api_key,
						    type: input.data('type'),
						    count: 5,
						    onSelect: function(suggestion) {
						        console.log(suggestion);
						    }
						});
					}
				});
			}
		},

		initForm: function()
		{
			body.on('focus', 'input.error', function(){
				$(this).removeClass('error');
			});

			$(".integer").on('keypress', function (e) {
				if ([0, 8, 13, 38, 40].indexOf( e.which ) < 0 && (e.which < 48 || e.which > 57))
				{
					return !1;
				}
			});

			$(".ignore-paste").on('keydown', function (e){
				if ((e.metaKey || e.ctrlKey) && e.keyCode == 86)
				{
					return !1;
				}
			});

			$(".float").on('keypress', function (e) {
				if ( [0, 8, 13, 38, 40, 44, 46].indexOf( e.which ) < 0 && ( e.which < 48 || e.which > 57 ) )
				{
					return !1;
				}
			});
		},

		initAccordion: function()
		{
			body.on('click', '.j-toggle-accordion', function(e){
				e.preventDefault();
				var $accordion_item = $(this).closest('.j-toggle-item');
				$(this).toggleClass('current');
				$accordion_item.find('.j-toggle-list').toggleClass('open');
			});
		},

		init: function()
		{
			this.disableHover();

			this.initPopup();
			this.initMask();
			// this.initSelect();
			// this.initSandwich();
			this.initAccordion();

			// this.ajaxForm.init();
		}

	};

})( jQuery );


// _app.ajaxform.js

;( function( $ ) {
	"use strict";

	$.app = $.app || {};

	var $body = $('body'), _this = null;

	$.app.ajaxForm = {

		config: {
			form_class: '.form-ajax',
			form_reset: 'form-reset',
			form_button: '.j-form-button',
			link_class: '.js-request-link',
			error_class: 'error',
			error_message: 'form__error-message',
			form_label: '.form__wrapper',
			checkbox_label: 'checkbox__label'
		},

		callback_stack: {},

		extend: function(config)
		{
			_this = this;

			if (typeof config !== 'undefined')
			{
				var x;
				for (x in config)
				{
					if (typeof _this.config[x] !== 'undefined')
						_this.config[x] = config[x];
				}
			}
		},

		default_handler: function($form, response)
		{
			_this = this;

			if (response.status)
			{
				if (response.hasOwnProperty('redirect_url'))
				{
					window.location.href = response.redirect_url;
				}
			}
			else if (response.errors)
			{
				_this.validation($form, response.errors);
			}
			
			if (response.hasOwnProperty('message'))
			{
				$.popup.message(response.title, response.message);
			}

		},

		upload: function()
		{
			_this = this;

			$body.on('submit', '.form-file-upload', function(e) {
				return AIM.submit(this, {
					onStart: function()
					{

					},
					onComplete: function(result)
					{
						if (typeof result === 'object' && result.status === true && result.hasOwnProperty('photo_url'))
						{

						}
					}
				});
			});
			
			$(document).on('change', '.upload_button_onchange', function(){
				if ($(this).closest('.upload_button').find('.upload_button_field').length > 0)
				{
					$(this).closest('.upload_button').find('.upload_button_field').html($(this).val());
				}
			});
		},

		validation: function($form, errors)
		{
			_this = this;

			$form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
			$form.find('.' + _this.config.error_message).remove();
			
			var fieldName, field;

			setTimeout(function() {
				if (errors)
				{
					for(fieldName in errors)
					{
						if ($form.find('input[name="'+fieldName+'"]').length > 0)
						{
							field = $form.find('input[name="'+fieldName+'"]');
						}

						if ($form.find('select[name="'+fieldName+'"]').length > 0)
						{
							field = $form.find('select[name="'+fieldName+'"]');
						}

						if ($form.find('textarea[name="'+fieldName+'"]').length > 0)
						{
							field = $form.find('textarea[name="'+fieldName+'"]');
						}

						if (field.closest('.' + _this.config.checkbox_label).length > 0)
						{
							field = field.closest('.' + _this.config.checkbox_label);
						}

						if (typeof field !== 'undefined')
						{
							field.addClass(_this.config.error_class);
							field.closest(_this.config.form_label).append('<div class="' + _this.config.error_message + '">' + errors[fieldName] + '</div>');
						}
					}
				}
			}, 10);
		},

		send: function(action, method, data, cb, err)
		{
			if (typeof cb !== 'function')
			{
				cb = function() {};
			}

			if (typeof err !== 'function')
			{
				err = function() {};
			}

			try {
			
				$.ajax({
					url: action,
					type: method,
					data: data,
					contentType: false,
					processData: method.toLowerCase() == 'get',
					success: cb,
					error: err,
					dataType: 'JSON'
				});

			} catch(e){}
		},

		initLink: function()
		{
			_this = this;

			$body.on('click', _this.config.link_class, function(e) {
				e.preventDefault ? e.preventDefault() : e.returnValue = false;
				
				var $link = $(this);

				if ($link.data('is-busy')) {
					return;
				}

				$link.data('is-busy', true);

				var action = ($(this).attr('href')) || $(this).data('action'),
					method = ($(this).data('method')) || 'get',
					data = {};

				_this.send(
					action,
					method,
					data,
					function(response)
					{
						if ($link.data('callback') && _this.callback_stack.hasOwnProperty($link.data('callback')))
						{
							_this.callback_stack[$link.data('callback')]($link, response);
						}
						else
						{
							_this.default_handler($link, response);
						}

						if (response.status === true)
						{

						}

						$link.data('is-busy', false);
					},
					function(response)
					{
						_this.default_handler($link, response);
						$link.data('is-busy', false);
					}
				);
			});
		},

		initForm: function()
		{
			_this = this;

			$body.on('submit', _this.config.form_class, function(e) {
				e.preventDefault ? e.preventDefault() : e.returnValue = false;

				var $form 	= $(this),
					action	= $form.attr('action'),
					method	= ($form.attr('method') || 'post'),
					data 	= !!window.FormData ? new FormData($form[0]) : $form.serialize();

				if ($form.data('is-busy')) {
					return;
				}

				$form.data('is-busy', true);

				if ($form.find(_this.config.form_button).length)
				{
					var $button = $form.find(_this.config.form_button);
				}

				if (typeof $button !== 'undefined')
				{
					if ($button.data('loading'))
					{
						$button.data('original', $button.text());
						$button.text($button.data('loading'));
					}

					$button.addClass('preload');
				}

				if ($form.data('precallback') && _this.callback_stack.hasOwnProperty($form.data('precallback'))) {
					if(!_this.callback_stack[$form.data('precallback')]($form))
					{
						return false;
					}
				}

				_this.send(
					action,
					method,
					data,
					function(response)
					{
						if ($form.data('callback') && _this.callback_stack.hasOwnProperty($form.data('callback')))
						{
							_this.callback_stack[$form.data('callback')]($form, response);
						}
						else
						{
							_this.default_handler($form, response);
						}

						if ($form.hasClass(_this.config.form_reset))
						{
							$form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
							$form.get(0).reset();
						}

						if (response.status === true)
						{
							
						}

						if (typeof $button !== 'undefined')
						{
							if ($button.data('original'))
							{
								$button.text($button.data('original'));
							}

							$button.removeClass('preload');
						}
						
						$form.data('is-busy', false);
					},
					function(response)
					{
						_this.default_handler($form, response);
						$form.data('is-busy', false);
					}
				);
			});
		},

		initValidate: function()
		{
			$body.on('focus', '.form__input.error, .form__textarea.error', function(){
				$(this).removeClass('error');
			});
		},

		init: function(config)
		{
			if (typeof config !== 'undefined')
			{
				this.extend(config);
			}
			
			this.initForm();
			this.initLink();
			this.initValidate();
		}

	};

})( jQuery );


// _app.sandwich.js

;(function ($) {
	"use strict";

	$.app = $.app || {};

	var _this;

	$.app.sandwich = {

		config: {
			keyHooks: !1,
			selector: '.js-sandwich-menu',
			wrapper: '.layout-wrapper',
			overlay: '.overlay'
		},

		extend: function(config)
		{
			_this = this;

			if (typeof config !== 'undefined')
			{
				var x;
				for (x in config)
				{
					if (typeof _this.config[x] !== 'undefined')
						_this.config[x] = config[x];
				}
			}
		},

		isOpen: function()
		{
			return body.hasClass('page-visible');
		},

		hide: function()
		{
			body.removeClass('page-open');

			setTimeout(function(){
				body.removeClass('page-visible');
			}, 10);

			$(this.config.overlay).css({
				'visibility': 'hidden'
			});
		},

		toggle: function()
		{
			if (body.hasClass('page-visible'))
			{
				setTimeout(function(){
					body.removeClass('page-visible');
				}, 10);
			}
			else
			{
				setTimeout(function(){
					body.addClass('page-visible');
				}, 10);
			}

			body.toggleClass('page-open');

			var visibility = 'visible';

			if (!body.hasClass('page-open'))
			{
				visibility = 'hidden'
			}
			
			$(_this.config.overlay).css({
				'visibility': visibility
			});
		},

		sandwichTrigger: function()
		{
			_this = this;

			if (_this.config.keyHooks)
			{
				body.on('keydown', function(e) {
					if(e.keyCode == 27 && _this.isOpen())
					{
						_this.toggle();
					}
				});
			};

			body.on('click', _this.config.selector, function(e){
				e.preventDefault ? e.preventDefault() : e.returnValue = false;
				_this.toggle();
			});
		},

		overlayTrigger: function()
		{
			_this = this;

			body.on('click', _this.config.overlay, function(e){
				_this.hide();
			});
		},

		init: function(config)
		{
			this.extend(config);
			
			this.sandwichTrigger();
			this.overlayTrigger();
		}

	};

})(jQuery);


// _app.stick.js

;(function ($) {
	"use strict";

	$.app = $.app || {};

	var body = $('body'), _this, _scrollTop, _timeout;

	$.app.stick = {

		config: {
			delay: 10,
			element: '.js-stick'
		},

		cache: [],

		calc: function()
		{
			_this = this;

			if ($(_this.config.element).length)
			{
				$(_this.config.element).map(function(index) {
					$(this).addClass('js-stick-' + index);
					_this.cache[index] = $(this).offset().top;
				});
			}
		},

		check: function()
		{
			_this = this;

			_scrollTop = $(window).scrollTop();

			var x, stick;

			for(x in _this.cache)
			{
				stick = $('.js-stick-' + x);

				if (_scrollTop >= _this.cache[x])
				{
					if (!stick.hasClass('sticked'))
					{
						stick.addClass('sticked');
					}
				}
				else
				{
					if (stick.hasClass('sticked'))
					{
						stick.removeClass('sticked');
					}
				}
			}
		},

		initScroll: function()
		{
			_this = this;

			$(window).on('scroll', function(e){

				clearTimeout(_timeout);

				_timeout = setTimeout(function() {

					_this.check();

				}, _this.config.delay);
				
			});
		},

		init: function()
		{
			this.calc();
			this.check();
			
			this.initScroll();
		}

	};

})(jQuery);


// _app.tabs.js

;(function ($) {
    "use strict";

    $.app = $.app || {};

    $.app.tabs = {

        config: {
            mouseevent:   'click',
            attribute:    'href',
            animation:    false,
            autorotate:   false,
            pauseonhover: true,
            delay:        2000,
            active:       1,
            container:    false,
            controls:     {
                prev: '.prev',
                next: '.next'
            }
        },

        extend: function(config)
        {
            _this = this;

            if (typeof config !== 'undefined')
            {
                var x;
                for (x in config)
                {
                    if (typeof _this.config[x] !== 'undefined')
                        _this.config[x] = config[x];
                }
            }
        },

        init: function(config)
        {
            this.extend(config);
        }

    };

})(jQuery);


// _fns.js

var tools = {
    isString: function (obj) {
        return typeof obj === 'string';
    },
    isObject: function (obj) {
        return typeof obj === 'object';
    },
    isNumber: function (obj) {
        return typeof obj === 'number';
    },
    isUndefined: function (value) {
        return typeof value === 'undefined';
    },
    isDefined: function (value) {
        return typeof value !== 'undefined';
    },
    isNull: function (value) {
        return value == null;
    }
};

// event.type должен быть keypress
function getChar(event)
{
    if (event.which == null) { // IE
        if (event.keyCode < 32) return null; // спец. символ
        return String.fromCharCode(event.keyCode)
    }

    if (event.which != 0 && event.charCode != 0) { // все кроме IE
        if (event.which < 32) return null; // спец. символ
        return String.fromCharCode(event.which); // остальные
    }

    return null; // спец. символ
}

function on(elm, events, handler)
{
   if (elm) {
       events.split(' ').forEach(function (event) {
           elm.addEventListener(event, handler);
       });
   }
}

function scrollToElement(element)
{
    if ($(element).length)
    {
        var block;

        if ($(element).closest('.popup').length)
        {
            block = $(element).closest('.popup');
        }
        else {
            block = $(element);
        }

        block.stop().animate({ scrollTop: $(element).position().top }, 'fast');
    }
}

function formatMoney(n, c, d, t)
{
    var c = isNaN(c = Math.abs(c)) ? 2 : c, 
    d = d == undefined ? '.' : d, 
    t = t == undefined ? ',' : t, 
    s = n < 0 ? '-' : '', 
    i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + '',
    j = (j = i.length) > 3 ? j % 3 : 0;
    return s + (j ? i.substr(0, j) + t : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, '$1' + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');
}

function getMax(arr)
{
    return Math.max.apply(Math, arr);
}

function getMin(arr)
{
    return Math.min.apply(Math, arr);
}

function is_null(x)
{
	return x == null;
}

function is_undefined(x)
{
	return typeof(x) == 'undefined';
}

function is_touch_device()
{
    return ("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch || 'onmsgesturechange' in window);
}

function declOfNum(number, titles) {  
    cases = [2, 0, 1, 1, 1, 2];  
    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  
}
// declOfNum(count, ['найдена', 'найдено', 'найдены']);

var shuffle = function( array ) {
	return array.sort( function() {
		return Math.random() - 0.5;
	} );
};

function updateCaptcha(captcha, ev)
{
    ev.preventDefault();

    if ($(captcha).length)
    {
        $(captcha).attr('src', $(captcha).attr('src').split( '?' )[0] + '?v=' + Math.random());
    }

    return !1;
}

// Возвращает функцию, которая не будет срабатывать, пока продолжает вызываться.
// Она сработает только один раз через N миллисекунд после последнего вызова.
// Если ей передан аргумент `immediate`, то она будет вызвана один раз сразу после
// первого запуска.
function debounce(func, wait, immediate) {
    var timeout;
    return function() {
        var context = this, args = arguments;
        var later = function() {
            timeout = null;
            if (!immediate) func.apply(context, args);
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
    };
};

// Использование
// var myEfficientFn = debounce(function() {
// All the taxing stuff you do
// }, 250);
// window.addEventListener('resize', myEfficientFn);


function once(fn, context) { 
    var result;

    return function() { 
        if(fn) {
            result = fn.apply(context || this, arguments);
            fn = null;
        }

        return result;
    };
}

// // Пример использования
// var canOnlyFireOnce = once(function() {
//     console.log('Запущено!');
// });

// canOnlyFireOnce(); // "Запущено!"
// canOnlyFireOnce(); // Не запущено


var getAbsoluteUrl = (function() {
    var a;

    return function(url) {
        if(!a) a = document.createElement('a');
        a.href = url;

        return a.href;
    };
})();

// Пример использования
// getAbsoluteUrl('/something');


/**
 * @param {string} s1 Исходная строка
 * @param {string} s2 Сравниваемая строка
 * @param {object} [costs] Веса операций { [replace], [replaceCase], [insert], [remove] }
 * @return {number} Расстояние Левенштейна
 */
function levenshtein(s1, s2, costs) {
    var i, j, l1, l2, flip, ch, chl, ii, ii2, cost, cutHalf;
    l1 = s1.length;
    l2 = s2.length;

    costs = costs || {};
    var cr = costs.replace || 1;
    var cri = costs.replaceCase || costs.replace || 1;
    var ci = costs.insert || 1;
    var cd = costs.remove || 1;

    cutHalf = flip = Math.max(l1, l2);

    var minCost = Math.min(cd, ci, cr);
    var minD = Math.max(minCost, (l1 - l2) * cd);
    var minI = Math.max(minCost, (l2 - l1) * ci);
    var buf = new Array((cutHalf * 2) - 1);

    for (i = 0; i <= l2; ++i) {
        buf[i] = i * minD;
    }

    for (i = 0; i < l1; ++i, flip = cutHalf - flip) {
        ch = s1[i];
        chl = ch.toLowerCase();

        buf[flip] = (i + 1) * minI;

        ii = flip;
        ii2 = cutHalf - flip;

        for (j = 0; j < l2; ++j, ++ii, ++ii2) {
            cost = (ch === s2[j] ? 0 : (chl === s2[j].toLowerCase()) ? cri : cr);
            buf[ii + 1] = Math.min(buf[ii2 + 1] + cd, buf[ii] + ci, buf[ii2] + cost);
        }
    }
    return buf[l2 + cutHalf - flip];
}
	
// function doOnOrientationChange()
// {
// 	switch(window.orientation) 
// 	{  
// 		case -90:
// 		case 90:
// 		alert('landscape');
// 		break; 
// 		default:
// 		alert('portrait');
// 		break; 
// 	}
// }

// window.addEventListener('orientationchange', doOnOrientationChange);

// doOnOrientationChange();


// Smoothly Scroll to page anchors
// var jump = function (e) {
// // Stop the "hard" jump.
// e.preventDefault();
// //Get the target
// var target = $(this).attr("href");
// // Use animated scrolling.  The .stop() prevents scroll queue.
// $('html,body').stop().animate({
//   // Find top-position of target-element and set it as scroll target.
//   scrollTop: $(target).offset().top
//   // Animation Delay:
//   }, 500, function () {
//     // Attach the hash (#jumptarget) to the page url.
//     location.hash = target;
//   });
// }

// // Instantiate this as follows in your document.ready();
// //$(document).ready(function () {
// //$('a[href*=#]').bind("click", jump);
// //return false;
// //});


// _google-map.js

function googleMap()
{
	var arr = {
		'moscow': {
			city: 'г. Москва',
			title: 'Москва',
			street: 'Верхняя Масловка, д. 20, стр. 1.',
			phone: '(495) 645-83-54',
			email: 'info@itsntk.ru',
			coords: [ 55.795316,37.562272 ]
		},
		'krasnodar': {
			city: 'г. Краснодар',
			title: 'Краснодар',
			street: 'ул. Дальняя, 39/3',
			phone: '(861) 278-98-34',
			email: 'info@itsntk.ru',
			coords: [ 45.060932,38.964575 ]
		}
	};

	var mapOptions = {
		zoom: 13,
		zoomControl: !0,
		zoomControlOptions: {
			style: google.maps.ZoomControlStyle.LARGE,
			position: google.maps.ControlPosition.LEFT_TOP
		},
		panControl: !1,
		panControlOptions: {
			position: google.maps.ControlPosition.LEFT_TOP
		},
		scrollwheel: !1,
		navigationControl: !1,
		mapTypeControl: !1,
		scaleControl: !0,
		draggable: !0,
		disableDoubleClickZoom: !1,
		center: new google.maps.LatLng(arr.krasnodar.coords[0], arr.krasnodar.coords[1])
	};

	var map = new google.maps.Map(document.getElementById('map-conteiner'), mapOptions);

	function addMarker( ar, map )
	{
		var contentString = [
			'<div class="map-content">',
				'<h2 class="firstHeading">'+ ar['title'] + '</h2>',
				'<div class="map-bodyContent">',
					'<p>' + ar['city'] + '</p>',
					'<p>' + ar['street'] + '</p>',
					'<p><span>Телефон:</span>' + ar['phone'] + '</p>',
					'<p><span>Email:</span>' + ar['email'] + '</p>',
				'</div>',
			'</div>'
		].join('');

		var infowindow = new google.maps.InfoWindow({
			content: contentString,
			disableAutoPan: true,
			maxWidth: 500
		});

		var image = {
			url: './images/map-marker.png',
			size: new google.maps.Size(18, 25),
			origin: new google.maps.Point(0, 0),
			scaledSize: new google.maps.Size(18, 25),
			anchor: new google.maps.Point(18, 25)
		};

		var marker = new google.maps.Marker({
			position: new google.maps.LatLng( ar['coords'][0], ar['coords'][1] ),
			map: map,
			icon: image,
			flat: true,
			title: ar['title']
		});

		google.maps.event.addListener(marker, 'click', function() {
			if(infowindow)
			{
				infowindow.close();
			}

			infowindow.open(map, marker);
		});
	}
	
	for (var i in arr)
	{
		addMarker(arr[i], map);
	}

	$('body').on('click', '.js-toggle-class', function(e){
		var wrapper = $(this).closest('.js-toggle-wrapper'), city = '';

		if ($(this).data('city'))
		{
			city = $(this).data('city');
			map.setZoom(13);
			map.setCenter({lat: arr[city].coords[0], lng: arr[city].coords[1] });
		}
	});
}


// _navigation.js

(function($) {
    "use strict";

    $.navigation = {
        options:
        {
            menu: '',
            link: '',
            anchor: '',
            currentClass: '',
            menuHeight: 0,
            lastId: '',
            scrollItems: [],
            menuItems: [],
            menuPosition: 0
        },

        change: function(scrollTop)
        {
            scrollTop += $.navigation.options.menuHeight;
            
            var cur = $.navigation.options.scrollItems.map(function(){
                if ($(this).offset().top < scrollTop)
                {
                    return this;
                }
            });
            
            cur = cur[cur.length-1];
            var id = cur && cur.length ? cur[0].id : "";
            
            if ($.navigation.options.lastId !== id)
            {
                var section = id.replace($.navigation.options.anchor, ''),
                    $item = $.navigation.options.menuItems.filter('[href="#'+section+'"]');

                $.navigation.options.lastId = id;
                $.navigation.options.menuItems.removeClass($.navigation.options.currentClass);
                $item.addClass($.navigation.options.currentClass);

                location.hash = section;
            }
        },

        calc: function()
        {
            var $item;

            $.navigation.options.scrollItems = $.navigation.options.menuItems.map(function(){
                $item = $(this.hash + $.navigation.options.anchor);
                
                if ($item.length)
                {
                    return $item;
                }
            });
        },

        scrollSection: function(hash, animate)
        {
            hash = hash + $.navigation.options.anchor;
            
            var $target = $(hash);

            if ($target.length)
            {
                var top = $target.offset().top - 15;
                
                if (animate) {
                    $('html,body').stop().animate({ 'scrollTop': top }, 'fast', 'easeInOutCirc');
                }
                else {
                    $('html,body').scrollTop(top);
                }
            }
        },

        init: function(options)
        {
            $.navigation.options = $.extend(options);
            
            var $menu = $($.navigation.options.menu);

            if ($menu.length)
            {
                $.navigation.options.menuHeight = $menu.outerHeight();
               
                $.navigation.options.menuItems = $($.navigation.options.link);
                $.navigation.options.menuPosition = $menu.position().top;
                 
                $.navigation.calc();
    
                $.navigation.options.menuItems.on('click', function(e) {
                    $.navigation.scrollSection(this.hash, true);
                });
        
                $.navigation.change($(document).scrollTop());

                $(window).scroll(function(){
                    $.navigation.change($(document).scrollTop());
                });

                $(window).resize(function(){
                    $.navigation.calc();
                });

                setTimeout(function(){
                    if (window.location.hash.length > 1)
                    {
                        $.navigation.scrollSection(window.location.hash, false);
                    }
                }, 150);
            }
        }
    }

    $.navigation.init({
        menu: '#navigation',
        link: '.j-navigation',
        anchor: '-anchor',
        currentClass: 'current'
    });
})(jQuery);


// _viewport.js

;(function ( $, window, document ) {
	"use strict";

	var viewport = 0,
    	wheight = $(window).height(),
    	scrollTop;

    $.fn.viewport = function ( options ) {
        options = $.extend( {}, $.fn.viewport.options, options );

        $.fn.viewport.options.items = this;

        if (!$.fn.viewport.options.elements.length)
		{
			$.fn.viewport.calculate();
		}

		if ($.fn.viewport.options.elements.length)
		{
			$.fn.viewport.animate();
	    }

	    $(window).scroll(function(){
			$.fn.viewport.animate();
		});

	    $(window).resize(function(){
			$.fn.viewport.calculate();
		});
    };

    $.fn.viewport.options = {
        items: {},
        elements: {}
    };

	$.fn.viewport.calculate = function() {
		$.fn.viewport.options.elements = $.fn.viewport.options.items.map(function(){
			if ($(this).length) {
				return $(this);
			}
        });
	}

    $.fn.viewport.animate = function() {
		scrollTop = $(window).scrollTop();

		$.fn.viewport.options.elements.map(function(){
			viewport = scrollTop + wheight;

	        if ($(this).offset().top <= viewport && !$(this).hasClass('active'))
	        {
	        	$(this).addClass('active');
	        }
	    });
	}

})( jQuery, window, document );

//$('.effected').viewport();


// init.js

$(document).ready(function() {
    $.app.init();
});

// basket.require(
//     { url: 'require.js' },
//     { url: 'require.config.js', skipCache: true },
//     { url: 'libs.js' }
// );

// basket.require(
//     { url: 'require.js' },
//     { url: 'require.config.js', skipCache: true },
//     { url: 'libs.js' }
// );

// basket
//     .require({ url: 'missing.js' })
//     .then(function () {
//         // Success
//     }, function (error) {
//         // There was an error fetching the script
//         console.log(error);
//     });

//     basket.require({ url: 'jquery-2.0.0.min.js', key: 'jquery' });

// basket.require({ url: 'jquery.min.js', expire: 2 })
// basket.require({ url: 'jquery.min.js', execute: false });

// // fetch and cache the file
// basket.require({ url: 'jquery.min.js' });
// // fetch and cache again
// basket.require({ url: 'jquery.min.js', unique: 123 });


// var whiteCSS = 'body { background-color: white; }';
// var blackCSS = 'body { background-color: black; }';
// var duration = 1000;
// var stopped = false;
// var css = null;
// var intervalId = null;
// function start(node) {
//     css = css === whiteCSS ? blackCSS : whiteCSS;
//     stylesheet.replaceStyleSheet(node, css, function (err, style) {
//         if (err) {
//             alert(err); // For IE8. I don't like it but this should never happen.
//         } else {
//             if (!stopped) {
//                 setTimeout(function () {
//                     start(style);
//                 }, duration);
//             }
//         }
//     });
// }
// function stop() {
//     stopped = true;
// }
// start();

// stylesheet.ignoreKB262161 = false; // Toggle this for different results.
//         var TOO_MANY_STYLES = 100;
//         var css = 'body { background-color: grey }';
//         var callbacks = [];
//         var x;
//         for (x = 0; x < TOO_MANY_STYLES; x++) {
//             callbacks.push(async.apply(stylesheet.appendStyleSheet, css));
//         }
//         async.parallel(callbacks, function(err, styles) {
//             if (err) {
//                 alert(err);
//             } else {
//                 alert('Successfully created ' + styles.length);
//             }
//         });


//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLmpzIiwiX2FwcC5hamF4Zm9ybS5qcyIsIl9hcHAuc2FuZHdpY2guanMiLCJfYXBwLnN0aWNrLmpzIiwiX2FwcC50YWJzLmpzIiwiX2Zucy5qcyIsIl9nb29nbGUtbWFwLmpzIiwiX25hdmlnYXRpb24uanMiLCJfdmlld3BvcnQuanMiLCJpbml0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsV0FBVzs7QUFFWCxDQUFDLEVBQUUsVUFBVSxDQUFDLEdBQUc7QUFDakIsQ0FBQyxZQUFZLENBQUM7O0NBRWIsTUFBTSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDekIsQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQzs7QUFFckIsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHOztFQUVQLFlBQVksRUFBRTtFQUNkO0dBQ0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7SUFDbEIsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUNaLFFBQVEsRUFBRSxtQkFBbUI7SUFDN0IsT0FBTyxFQUFFLGlCQUFpQjtJQUMxQixPQUFPLEVBQUUsZUFBZTtJQUN4QixDQUFDLENBQUM7QUFDTixHQUFHOztFQUVELFVBQVUsRUFBRTtFQUNaO0dBQ0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDaEIsTUFBTSxJQUFJLFNBQVM7SUFDbkIsSUFBSSxJQUFJLGtCQUFrQjtJQUMxQixPQUFPLEdBQUcsSUFBSTtJQUNkLENBQUMsQ0FBQztBQUNOLEdBQUc7O0VBRUQsaUJBQWlCLEVBQUU7RUFDbkI7R0FDQyxJQUFJLENBQUMsRUFBRSxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsRUFBRSxNQUFNLENBQUM7SUFDMUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLE1BQU07SUFDNUM7QUFDSixLQUFLLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxL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LENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQzs7QUFFL0IsSUFBSSxPQUFPLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDOztJQUVsQyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDbkMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUNqRCxJQUFJLElBQUksR0FBRyxHQUFHLElBQUksS0FBSyxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzs7SUFFdkMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDdEIsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7QUFDMUIsS0FBSzs7SUFFRCxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEdBQUcsT0FBTyxHQUFHLElBQUksRUFBRTtRQUM1QyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25CLFFBQVEsR0FBRyxHQUFHLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQzs7QUFFL0IsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQzs7UUFFM0IsRUFBRSxHQUFHLElBQUksQ0FBQztBQUNsQixRQUFRLEdBQUcsR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDOztRQUVy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Q0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU07RUFDaEQ7R0FDQyxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztBQUM3QixHQUFHOztFQUVELElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNO0VBQ3pDO0dBQ0MsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDM0IsTUFBTTs7S0FFRCxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVU7R0FDN0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDM0IsR0FBRyxDQUFDLENBQUM7O0tBRUEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVO0dBQzdCLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO0dBQzFCLENBQUMsQ0FBQztBQUNMLEtBQUssQ0FBQzs7SUFFRixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUc7UUFDcEIsS0FBSyxFQUFFLEVBQUU7UUFDVCxRQUFRLEVBQUUsRUFBRTtBQUNwQixLQUFLLENBQUM7O0NBRUwsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxHQUFHLFdBQVc7RUFDcEMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVO0dBQzFFLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRTtJQUNuQixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNmO1NBQ0ssQ0FBQyxDQUFDO0FBQ1gsRUFBRTs7SUFFRSxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsV0FBVztBQUN2QyxFQUFFLFNBQVMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7O0VBRWxDLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFVBQVU7QUFDL0MsR0FBRyxRQUFRLEdBQUcsU0FBUyxHQUFHLE9BQU8sQ0FBQzs7U0FFekIsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxJQUFJLFFBQVEsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO1NBQ25FO1VBQ0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztVQUMzQjtNQUNKLENBQUMsQ0FBQztBQUNSLEVBQUU7O0FBRUYsQ0FBQyxHQUFHLE1BQU0sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUM7O0FBRS9CLDRCQUE0Qjs7QUM5RDVCO0FBQ0EsVUFBVTs7QUFFVixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVc7SUFDekIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNqQixDQUFDLENBQUMsQ0FBQzs7QUFFSCxrQkFBa0I7QUFDbEIsNkJBQTZCO0FBQzdCLHFEQUFxRDtBQUNyRCx5QkFBeUI7QUFDekIsS0FBSzs7QUFFTCxrQkFBa0I7QUFDbEIsNkJBQTZCO0FBQzdCLHFEQUFxRDtBQUNyRCx5QkFBeUI7QUFDekIsS0FBSzs7QUFFTCxTQUFTO0FBQ1Qsc0NBQXNDO0FBQ3RDLDBCQUEwQjtBQUMxQixxQkFBcUI7QUFDckIsNEJBQTRCO0FBQzVCLG9EQUFvRDtBQUNwRCw4QkFBOEI7QUFDOUIsVUFBVTs7QUFFVixxRUFBcUU7O0FBRXJFLHNEQUFzRDtBQUN0RCw0REFBNEQ7O0FBRTVELDhCQUE4QjtBQUM5Qiw0Q0FBNEM7QUFDNUMsMkJBQTJCO0FBQzNCLHlEQUF5RDtBQUN6RDs7QUFFQSxzREFBc0Q7QUFDdEQsc0RBQXNEO0FBQ3RELHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkIsa0JBQWtCO0FBQ2xCLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIsb0RBQW9EO0FBQ3BELHNFQUFzRTtBQUN0RSxxQkFBcUI7QUFDckIsb0ZBQW9GO0FBQ3BGLG1CQUFtQjtBQUNuQiw4QkFBOEI7QUFDOUIsMkNBQTJDO0FBQzNDLG9DQUFvQztBQUNwQyxnQ0FBZ0M7QUFDaEMsZ0JBQWdCO0FBQ2hCLFlBQVk7QUFDWixVQUFVO0FBQ1YsSUFBSTtBQUNKLG9CQUFvQjtBQUNwQixzQkFBc0I7QUFDdEIsSUFBSTtBQUNKLFdBQVc7O0FBRVgsMkVBQTJFO0FBQzNFLHFDQUFxQztBQUNyQyx1REFBdUQ7QUFDdkQsOEJBQThCO0FBQzlCLGlCQUFpQjtBQUNqQixrREFBa0Q7QUFDbEQsNkVBQTZFO0FBQzdFLFlBQVk7QUFDWiw0REFBNEQ7QUFDNUQseUJBQXlCO0FBQ3pCLDhCQUE4QjtBQUM5Qix1QkFBdUI7QUFDdkIsa0VBQWtFO0FBQ2xFLGdCQUFnQjtBQUNoQixjQUFjIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyI7KCBmdW5jdGlvbiggJCApIHtcblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0d2luZG93LmJvZHkgPSAkKCdib2R5Jyk7XG5cdHdpbmRvdy5fdGhpcyA9IG51bGw7XG5cblx0JC5hcHAgPSB7XG5cdFx0XG5cdFx0aW5pdFNhbmR3aWNoOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0dGhpcy5zYW5kd2ljaC5pbml0KHtcblx0XHRcdFx0a2V5SG9va3M6ICEwLFxuXHRcdFx0XHRzZWxlY3RvcjogJy5qcy1zYW5kd2ljaC1tZW51Jyxcblx0XHRcdFx0d3JhcHBlcjogJy5sYXlvdXQtd3JhcHBlcicsXG5cdFx0XHRcdG92ZXJsYXk6ICcjbWVudS1vdmVybGF5J1xuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdGluaXRTbGlkZXI6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHR0aGlzLnNsaWRlci5pbml0KHtcblx0XHRcdFx0c2xpZGVyIFx0OiAnI3NsaWRlcicsXG5cdFx0XHRcdGl0ZW0gXHQ6ICcuanMtc2xpZGVyLXNsaWRlJyxcblx0XHRcdFx0dGltZW91dCA6IDYwMDBcblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0XG5cdFx0aW5pdFNlbGVjdFRyaWdnZXI6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRib2R5Lm9uKCdzZWxlY3QuY2xvc2UnLCBmdW5jdGlvbihlLCBzZWxlY3Qpe1xuXHRcdFx0XHRpZiAoJChzZWxlY3QpLmNsb3Nlc3QoJy5mb3JtX19ncm91cCcpLmxlbmd0aClcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHZhciBpbmRleCA9IDEsIGdyb3VwID0gJChzZWxlY3QpLmNsb3Nlc3QoJy5mb3JtX19ncm91cCcpO1xuXG5cdFx0XHRcdFx0Z3JvdXAuY3NzKCd6LWluZGV4JywgMSk7XG5cblx0XHRcdFx0XHRpZiAoZ3JvdXAuY2xvc2VzdCgnLmZvcm1fX2dyb3VwX2l0ZW1zJykubGVuZ3RoKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGdyb3VwID0gZ3JvdXAuY2xvc2VzdCgnLmZvcm1fX2dyb3VwX2l0ZW1zJyk7XG5cblx0XHRcdFx0XHRcdGdyb3VwLmNzcygnei1pbmRleCcsIDEpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdGJvZHkub24oJ3NlbGVjdC5vcGVuJywgZnVuY3Rpb24oZSwgc2VsZWN0KXtcblx0XHRcdFx0aWYgKCQoc2VsZWN0KS5jbG9zZXN0KCcuZm9ybV9fZ3JvdXAnKS5sZW5ndGgpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR2YXIgZ3JvdXAgPSAkKHNlbGVjdCkuY2xvc2VzdCgnLmZvcm1fX2dyb3VwJyk7XG5cblx0XHRcdFx0XHRncm91cC5jc3MoJ3otaW5kZXgnLCAxMDAwMCk7XG5cblx0XHRcdFx0XHRpZiAoZ3JvdXAuY2xvc2VzdCgnLmZvcm1fX2dyb3VwX2l0ZW1zJykubGVuZ3RoKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGdyb3VwID0gZ3JvdXAuY2xvc2VzdCgnLmZvcm1fX2dyb3VwX2l0ZW1zJyk7XG5cblx0XHRcdFx0XHRcdGdyb3VwLmNzcygnei1pbmRleCcsIDEwMDAwKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHRib2R5Lm9uKCdjaGFuZ2UnLCAnLmpzLWZvcm0tc2VsZWN0JywgZnVuY3Rpb24oZSl7XG5cdFx0XHRcdGlmICgkKHRoaXMpLmNsb3Nlc3QoJy5lcnJvcicpLmxlbmd0aClcblx0XHRcdFx0e1xuXHRcdFx0XHRcdCQodGhpcykuY2xvc2VzdCgnLmVycm9yJykucmVtb3ZlQ2xhc3MoJ2Vycm9yJyk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRpbml0U2VsZWN0OiBmdW5jdGlvbihncm91cClcblx0XHR7XG5cdFx0XHRpZiAodHlwZW9mKGdyb3VwKSA9PSAndW5kZWZpbmVkJylcblx0XHRcdHtcblx0XHRcdFx0JCgnc2VsZWN0Jykubm90KCcuaXMtc3lzdGVtJykuc2VsZWN0Ym94KCk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlXG5cdFx0XHR7XG5cdFx0XHRcdGdyb3VwLmZpbmQoJ3NlbGVjdCcpLm5vdCgnLmlzLXN5c3RlbScpLnNlbGVjdGJveCgpO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLmluaXRTZWxlY3RUcmlnZ2VyKCk7XG5cdFx0fSxcblxuXHRcdGluaXRNYXNrOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0JChcIi5qcy1kYXRlLXdhdGNoZXJcIikubWFzayhcIjk5Lzk5Lzk5OTlcIik7XG5cdFx0XHQkKFwiLmpzLXBob25lLXdhdGNoZXJcIikubWFzayhcIisgNyAoOTk5KSA5OTktOTktOTlcIik7XG5cdFx0XHQkKFwiLmpzLWNhcnRudW1iZXItd2F0Y2hlclwiKS5tYXNrKFwiOTk5LTk5OS05OTlcIik7XG5cdFx0fSxcblx0XHRcblx0XHRpbml0RmFzdGNsaWNrOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0RmFzdENsaWNrLmF0dGFjaChkb2N1bWVudC5ib2R5KTtcblx0XHR9LFxuXG5cdFx0aW5pdFBvcHVwOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0JC5wb3B1cC5pbml0KCcuanMtb3Blbi1wb3B1cCcsIHtcblx0XHRcdFx0Y3NzUG9zaXRpb246IGZhbHNlLFxuXHRcdFx0XHR3cmFwcGVyOiAnLmxheW91dC13cmFwcGVyJ1xuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRcblx0XHRpbml0TWFnbmlmaWM6IGZ1bmN0aW9uKClcblx0XHR7IFxuXHRcdFx0aWYgKCQoJy56b29tLWdyb3VwJykubGVuZ3RoKVxuXHRcdFx0e1xuXHRcdFx0XHQkKCcuem9vbS1ncm91cCcpLmZpbmQoJy56b29tLWxpc3QnKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0JCh0aGlzKS5tYWduaWZpY1BvcHVwKHtcblx0XHRcdFx0XHRcdGRlbGVnYXRlOiAnLnpvb20nLFxuXHRcdFx0XHRcdFx0dHlwZTogJ2ltYWdlJyxcblx0XHRcdFx0IFx0XHRwcmVsb2FkZXI6IHRydWUsXG5cdFx0XHRcdFx0XHRnYWxsZXJ5OiB7XG5cdFx0XHRcdFx0XHRcdGVuYWJsZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdG5hdmlnYXRlQnlJbWdDbGljazogdHJ1ZSxcblx0XHRcdFx0XHRcdFx0dENvdW50ZXI6ICclY3VyciUgb2YgJXRvdGFsJSdcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR6b29tOiB7XG5cdFx0XHRcdFx0XHRcdGVuYWJsZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdGR1cmF0aW9uOiAzMDAsXG5cdFx0XHRcdFx0XHRcdGVhc2luZzogJ2Vhc2UtaW4tb3V0Jyxcblx0XHRcdFx0XHRcdFx0b3BlbmVyOiBmdW5jdGlvbihvcGVuZXJFbGVtZW50KSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIG9wZW5lckVsZW1lbnQuaXMoJ2ltZycpID8gb3BlbmVyRWxlbWVudCA6IG9wZW5lckVsZW1lbnQuZmluZCgnaW1nJyk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0IFx0Y2xvc2VPbkNvbnRlbnRDbGljazogdHJ1ZVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHRcdGVsc2Vcblx0XHRcdHtcblx0XHRcdFx0JCgnLnpvb20nKS5tYWduaWZpY1BvcHVwKHtcblx0XHRcdFx0IFx0dHlwZTonaW1hZ2UnLFxuXHRcdFx0XHQgXHRwcmVsb2FkZXI6IHRydWUsXG5cdFx0XHRcdFx0Z2FsbGVyeToge1xuXHRcdFx0XHRcdFx0ZW5hYmxlZDogdHJ1ZVxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0em9vbToge1xuXHRcdFx0XHRcdFx0ZW5hYmxlZDogdHJ1ZSxcblx0XHRcdFx0XHRcdGR1cmF0aW9uOiAzMDAsXG5cdFx0XHRcdFx0XHRlYXNpbmc6ICdlYXNlLWluLW91dCcsXG5cdFx0XHRcdFx0XHRvcGVuZXI6IGZ1bmN0aW9uKG9wZW5lckVsZW1lbnQpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIG9wZW5lckVsZW1lbnQuaXMoJ2ltZycpID8gb3BlbmVyRWxlbWVudCA6IG9wZW5lckVsZW1lbnQuZmluZCgnaW1nJyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0IFx0Y2xvc2VPbkNvbnRlbnRDbGljazogdHJ1ZVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0aW5pdEZhbmN5Qm94OiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0aWYgKCFpc191bmRlZmluZWQoJC5mbi5mYW5jeWJveCkpXG5cdFx0XHR7XG5cdFx0XHRcdCQoJy5mYW5jeWJveCcpLmZhbmN5Ym94KHtcblx0XHRcdFx0XHRoZWxwZXJzOiB7XG5cdFx0XHRcdFx0XHRvdmVybGF5OiB7XG5cdFx0XHRcdFx0XHQgIGxvY2tlZDogZmFsc2Vcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdCQoJy5mYW5jeWJveC1tZWRpYScpLmZhbmN5Ym94KHtcblx0XHRcdFx0XHRvcGVuRWZmZWN0ICA6ICdub25lJyxcblx0XHRcdFx0XHRjbG9zZUVmZmVjdCA6ICdub25lJyxcblx0XHRcdFx0XHRoZWxwZXJzIDoge1xuXHRcdFx0XHRcdFx0bWVkaWEgOiB7fSxcblx0XHRcdFx0XHRcdG92ZXJsYXk6IHtcblx0XHRcdFx0XHRcdCAgbG9ja2VkOiBmYWxzZVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0JChcIi5pZnJhbWVcIikuZmFuY3lib3goe1xuXHRcdFx0XHRcdCd0cmFuc2l0aW9uSW4nXHRcdDogJ25vbmUnLFxuXHRcdFx0XHRcdCd0cmFuc2l0aW9uT3V0J1x0XHQ6ICdub25lJyxcblx0XHRcdFx0XHQnYXV0b1NjYWxlJyAgICAgXHQ6IGZhbHNlLFxuXHRcdFx0XHRcdCd0eXBlJ1x0XHRcdFx0OiAnaWZyYW1lJyxcblx0XHRcdFx0XHQnd2lkdGgnXHRcdFx0XHQ6IDUwMCxcblx0XHRcdFx0XHQnaGVpZ2h0J1x0XHRcdDogNTAwLFxuXHRcdFx0XHRcdCdzY3JvbGxpbmcnICAgXHRcdDogJ25vJ1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0XG5cdFx0XHRcdCQoXCIudmFyaW91c1wiKS5mYW5jeWJveCh7XG5cdFx0XHRcdFx0bWF4V2lkdGhcdDogODAwLFxuXHRcdFx0XHRcdG1heEhlaWdodFx0OiA2MDAsXG5cdFx0XHRcdFx0Zml0VG9WaWV3XHQ6IGZhbHNlLFxuXHRcdFx0XHRcdHdpZHRoXHRcdDogJzcwJScsXG5cdFx0XHRcdFx0aGVpZ2h0XHRcdDogJzcwJScsXG5cdFx0XHRcdFx0YXV0b1NpemVcdDogZmFsc2UsXG5cdFx0XHRcdFx0Y2xvc2VDbGlja1x0OiBmYWxzZSxcblx0XHRcdFx0XHRvcGVuRWZmZWN0XHQ6ICdub25lJyxcblx0XHRcdFx0XHRjbG9zZUVmZmVjdFx0OiAnbm9uZScsXG5cdFx0XHRcdFx0aGVscGVyczoge1xuXHRcdFx0XHRcdFx0b3ZlcmxheToge1xuXHRcdFx0XHRcdFx0ICBsb2NrZWQ6IGZhbHNlXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0c2xpY2tDYXJvdXNlbDogZnVuY3Rpb24oKVxuXHRcdHtcblx0XHRcdGlmICgkKCcuanMtY2Fyb3VzZWwnKS5sZW5ndGggJiYgJCgnLmpzLWNhcm91c2VsJykuZmluZCgnLnNsaWNrLXNsaWRlJykubGVuZ3RoKVxuXHRcdFx0e1xuXHRcdFx0XHR2YXIgY291bnQgPSA0LCBjbGFzc25hbWUgPSAnY2Fyb3VzZWwnO1xuXG5cdFx0XHRcdCQoJy5qcy1jYXJvdXNlbCcpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRjb3VudCA9IDQ7XG5cdFx0XHRcdFx0Y2xhc3NuYW1lID0gJ2Nhcm91c2VsJztcblxuXHRcdFx0XHRcdGlmICgkKHRoaXMpLmRhdGEoJ3ZpZXdjb3VudCcpKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGNvdW50ID0gcGFyc2VJbnQoJCh0aGlzKS5kYXRhKCd2aWV3Y291bnQnKSk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKCQodGhpcykuZGF0YSgnY2xhc3NuYW1lJykpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0Y2xhc3NuYW1lID0gJCh0aGlzKS5kYXRhKCdjbGFzc25hbWUnKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQkKHRoaXMpLnNsaWNrKHtcblx0XHRcdFx0XHRcdGluZmluaXRlOiB0cnVlLFxuXHRcdFx0XHRcdFx0ZG90czogZmFsc2UsXG5cdFx0XHRcdFx0XHRkcmFnZ2FibGU6IHRydWUsXG5cdFx0XHRcdFx0XHRzcGVlZDogMTcwLFxuXHRcdFx0XHRcdFx0c2xpZGVzVG9TaG93OiBjb3VudCxcblx0XHRcdFx0XHRcdHNsaWRlc1RvU2Nyb2xsOiAxLFxuXHRcdFx0XHRcdFx0cHJldkFycm93OiAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCInK2NsYXNzbmFtZSsnX19uYXZpZ2F0aW9uICcrY2xhc3NuYW1lKydfX25hdmlnYXRpb25fcHJldiBzbGljay1wcmV2XCI+PC9idXR0b24+Jyxcblx0XHRcdFx0XHRcdG5leHRBcnJvdzogJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiJytjbGFzc25hbWUrJ19fbmF2aWdhdGlvbiAnK2NsYXNzbmFtZSsnX19uYXZpZ2F0aW9uX25leHQgc2xpY2stbmV4dFwiPjwvYnV0dG9uPicsXG5cdFx0XHRcdFx0XHRyZXNwb25zaXZlOiBbXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRicmVha3BvaW50OiAxMDI0LFxuXHRcdFx0XHRcdFx0XHRcdHNldHRpbmdzOiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRzbGlkZXNUb1Nob3c6IDMsXG5cdFx0XHRcdFx0XHRcdFx0XHRzbGlkZXNUb1Njcm9sbDogMyxcblx0XHRcdFx0XHRcdFx0XHRcdGluZmluaXRlOiB0cnVlLFxuXHRcdFx0XHRcdFx0XHRcdFx0ZG90czogdHJ1ZVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrcG9pbnQ6IDYwMCxcblx0XHRcdFx0XHRcdFx0XHRzZXR0aW5nczoge1xuXHRcdFx0XHRcdFx0XHRcdFx0c2xpZGVzVG9TaG93OiAyLFxuXHRcdFx0XHRcdFx0XHRcdFx0c2xpZGVzVG9TY3JvbGw6IDJcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRicmVha3BvaW50OiA0ODAsXG5cdFx0XHRcdFx0XHRcdFx0c2V0dGluZ3M6IHtcblx0XHRcdFx0XHRcdFx0XHRcdHNsaWRlc1RvU2hvdzogMSxcblx0XHRcdFx0XHRcdFx0XHRcdHNsaWRlc1RvU2Nyb2xsOiAxXG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRdXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRzbGlja1NsaWRlcjogZnVuY3Rpb24oKVxuXHRcdHtcblx0XHRcdGlmICgkKCcuanMtc2xpZGVyJykubGVuZ3RoICYmICQoJy5qcy1zbGlkZXInKS5maW5kKCcuc2xpY2stc2xpZGUnKS5sZW5ndGgpXG5cdFx0XHR7XG5cdFx0XHRcdHZhciBjb3VudCA9IDQsIGNsYXNzbmFtZSA9ICdzbGlkZXInLCAkc2xpZGVyID0gJycsIHdpZHRoID0gJCh3aW5kb3cpLndpZHRoKCksIG9wdGlvbnMgPSB7fTtcblxuXHRcdFx0XHQkKCcuanMtc2xpZGVyJykuZWFjaChmdW5jdGlvbigpe1xuXHRcdFx0XHRcdGNvdW50ID0gNDtcblx0XHRcdFx0XHRjbGFzc25hbWUgPSAnc2xpZGVyJztcblxuXHRcdFx0XHRcdG9wdGlvbnMgPSB7XG5cdFx0XHRcdFx0XHRpbmZpbml0ZTogITAsXG5cdFx0XHRcdFx0XHRkb3RzOiAhMSxcblx0XHRcdFx0XHRcdGRyYWdnYWJsZTogITEsXG5cdFx0XHRcdFx0XHRzcGVlZDogMzAwLFxuXHRcdFx0XHRcdFx0ZmFkZTogITEsXG5cdFx0XHRcdFx0XHRhdXRvcGxheTogITEsXG5cdFx0XHRcdFx0XHRhdXRvcGxheVNwZWVkOiA0NTAwLFxuXHRcdFx0XHRcdFx0cGF1c2VPbkhvdmVyOiAhMSxcblx0XHRcdFx0XHRcdHVzZVRyYW5zZm9ybTogITEsXG5cdFx0XHRcdFx0XHR2YXJpYWJsZVdpZHRoOiAhMCxcblx0XHRcdFx0XHRcdGNzc0Vhc2U6ICdlYXNlJ1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0JHNsaWRlciA9ICQodGhpcyk7XG5cblx0XHRcdFx0XHRpZiAoJHNsaWRlci5kYXRhKCd2aWV3Y291bnQnKSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRjb3VudCA9IHBhcnNlSW50KCRzbGlkZXIuZGF0YSgndmlld2NvdW50JykpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmICgkc2xpZGVyLmhhc0NsYXNzKCdqcy1zbGlkZXItY2FsYycpKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHQgXHQkc2xpZGVyLmZpbmQoJy5zbGljay1zbGlkZScpLmNzcyh7XG5cdFx0XHRcdFx0IFx0XHQnd2lkdGgnOiB3aWR0aCArICdweCdcblx0XHRcdFx0XHQgXHR9KTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoJHNsaWRlci5kYXRhKCdjbGFzc25hbWUnKSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRjbGFzc25hbWUgPSAkc2xpZGVyLmRhdGEoJ2NsYXNzbmFtZScpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcblx0XHRcdFx0XHRpZiAoISRzbGlkZXIuaGFzQ2xhc3MoJ2pzLWRpc2FibGUtbmF2aWdhdGlvbicpKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdG9wdGlvbnNbJ3ByZXZBcnJvdyddID0gJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwic2xpZGVyX19uYXZpZ2F0aW9uIHNsaWRlcl9fbmF2aWdhdGlvbl9wcmV2IHNsaWNrLXByZXZcIj48L2J1dHRvbj4nO1xuXHRcdFx0XHRcdFx0b3B0aW9uc1snbmV4dEFycm93J10gPSAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJzbGlkZXJfX25hdmlnYXRpb24gc2xpZGVyX19uYXZpZ2F0aW9uX25leHQgc2xpY2stbmV4dFwiPjwvYnV0dG9uPic7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRvcHRpb25zWydhcnJvd3MnXSA9ICExO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdCRzbGlkZXIuc2xpY2sob3B0aW9ucyk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRkaXNhYmxlSG92ZXI6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHR2YXIgdGltZXI7XG5cdFx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGNsZWFyVGltZW91dCh0aW1lcik7XG5cdFx0XHRcdFxuXHRcdFx0XHRpZighYm9keS5oYXNDbGFzcygnZGlzYWJsZS1ob3ZlcicpKSB7XG5cdFx0XHRcdFx0Ym9keS5hZGRDbGFzcygnZGlzYWJsZS1ob3ZlcicpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0Ym9keS5yZW1vdmVDbGFzcygnZGlzYWJsZS1ob3ZlcicpO1xuXHRcdFx0XHR9LDUwMCk7XG5cdFx0XHR9LCBmYWxzZSk7XG5cdFx0fSxcblxuXHRcdGluaXRUb29sdGlwOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0dmFyIHRvb2x0aXAsIGl0ZW07XG5cblx0XHRcdGJvZHkub24oJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG5cdFx0XHRcdGlmICghJChlLnRhcmdldCkuaGFzQ2xhc3MoJ3Rvb2x0aXAnKSAmJiAhJChlLnRhcmdldCkuaGFzQ2xhc3MoJ2pzLXRvb2x0aXAnKSAmJiAkKCcudG9vbHRpcC5zaG93JykubGVuZ3RoKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0JCgnLnRvb2x0aXAuc2hvdycpLnJlbW92ZUNsYXNzKCdhbmltYXRlJyk7XG5cblx0XHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHQkKCcudG9vbHRpcC5zaG93JykucmVtb3ZlQ2xhc3MoJ3Nob3cnKTtcblx0XHRcdFx0XHR9LCAzMDApO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0Ym9keS5vbignY2xpY2snLCAnLmpzLXRvb2x0aXAnLCBmdW5jdGlvbihlKXtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcblx0XHRcdFx0aXRlbSA9ICQodGhpcyk7XG5cblx0XHRcdFx0aWYgKChpdGVtLmRhdGEoJ3Rvb2x0aXAnKSB8fCBpdGVtLmZpbmQoJy50b29sdGlwJykubGVuZ3RoKSAmJiAhJChlLnRhcmdldCkuaGFzQ2xhc3MoJ3Rvb2x0aXAnKSlcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRvb2x0aXAgPSBpdGVtLmRhdGEoJ3Rvb2x0aXAnKTtcblxuXHRcdFx0XHRcdGlmICghaXRlbS5maW5kKCcudG9vbHRpcCcpLmxlbmd0aClcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHR2YXIgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblx0XHRcdFx0XHRcdHNwYW4uY2xhc3NOYW1lID0gJ3Rvb2x0aXAnO1xuXHRcdFx0XHRcdFx0c3Bhbi5pbm5lckhUTUwgPSB0b29sdGlwO1xuXG5cdFx0XHRcdFx0XHRpdGVtLmFwcGVuZChzcGFuKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoaXRlbS5maW5kKCcudG9vbHRpcCcpLmhhc0NsYXNzKCdzaG93JykpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aXRlbS5maW5kKCcudG9vbHRpcCcpLnJlbW92ZUNsYXNzKCdhbmltYXRlJyk7XG5cblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0aXRlbS5maW5kKCcudG9vbHRpcCcpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG5cdFx0XHRcdFx0XHR9LCAyMDApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aXRlbS5maW5kKCcudG9vbHRpcCcpLmFkZENsYXNzKCdzaG93Jyk7XG5cblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0aXRlbS5maW5kKCcudG9vbHRpcCcpLmFkZENsYXNzKCdhbmltYXRlJyk7XG5cdFx0XHRcdFx0XHR9LCAxMCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0dG9nZ2xlOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0dmFyIHNlbGVjdG9yLCBibG9jaywgdGFyZ2V0LCBidXR0b247XG5cblx0XHRcdCQoJy5qcy10b2dnbGUtdHJpZ2dlcicpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0aWYgKCQoJCh0aGlzKS5kYXRhKCd0b2dnbGUnKSkubGVuZ3RoKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSAkKHRoaXMpLmRhdGEoJ3RvZ2dsZScpO1xuXHRcdFx0XHRcdGJ1dHRvbiA9ICQodGhpcyk7XG5cdFx0XHRcdFx0YmxvY2sgPSAkKHNlbGVjdG9yKTtcblxuXHRcdFx0XHRcdGJvZHkub24oJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG5cdFx0XHRcdFx0XHR0YXJnZXQgPSAkKGUudGFyZ2V0KTtcblxuXHRcdFx0XHRcdFx0aWYgKCF0YXJnZXQuY2xvc2VzdChzZWxlY3RvcikubGVuZ3RoICYmICF0YXJnZXQuY2xvc2VzdCgnLmpzLXRvZ2dsZS10cmlnZ2VyJykubGVuZ3RoICYmIGJsb2NrLmhhc0NsYXNzKCdhY3RpdmUnKSlcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0YnV0dG9uLnJlbW92ZUNsYXNzKCdhbmltYXRlJyk7XG5cdFx0XHRcdFx0XHRcdGJsb2NrLnJlbW92ZUNsYXNzKCd0cmFuc2Zvcm0nKTtcblxuXHRcdFx0XHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0YmxvY2sucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuXHRcdFx0XHRcdFx0XHR9LCAxMzUpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1x0XHRcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdGJvZHkub24oJ2NsaWNrJywgJy5qcy10b2dnbGUtdHJpZ2dlcicsIGZ1bmN0aW9uKGUpe1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRcdFx0aWYgKCQodGhpcykuZGF0YSgndG9nZ2xlJykpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRibG9jayA9ICQoJCh0aGlzKS5kYXRhKCd0b2dnbGUnKSk7XG5cdFx0XHRcdFx0YnV0dG9uID0gJCh0aGlzKTtcblxuXHRcdFx0XHRcdGlmIChibG9jay5sZW5ndGgpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aWYgKCFibG9jay5oYXNDbGFzcygnYWN0aXZlJykpXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGJ1dHRvbi5hZGRDbGFzcygnYW5pbWF0ZScpO1xuXHRcdFx0XHRcdFx0XHRibG9jay5hZGRDbGFzcygnYWN0aXZlJyk7XG5cblx0XHRcdFx0XHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdGJsb2NrLmFkZENsYXNzKCd0cmFuc2Zvcm0nKTtcblx0XHRcdFx0XHRcdFx0fSwgNSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGJ1dHRvbi5yZW1vdmVDbGFzcygnYW5pbWF0ZScpO1xuXHRcdFx0XHRcdFx0XHRibG9jay5yZW1vdmVDbGFzcygndHJhbnNmb3JtJyk7XG5cblx0XHRcdFx0XHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdGJsb2NrLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcblx0XHRcdFx0XHRcdFx0fSwgMTM1KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XG5cdFx0XHRcdH1cblxuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRcblx0XHRmaW5kSnVtcEVsZW1lbnQ6IGZ1bmN0aW9uKGhhc2gpXG5cdFx0e1xuXHRcdFx0aGFzaCA9IGhhc2guc3Vic3RyKDEpO1xuXG5cdFx0XHRpZiAoJCgnYVtuYW1lPVwiJyArIGhhc2ggKyAnXCJdJykubGVuZ3RoKVxuXHRcdFx0e1xuXHRcdFx0XHRyZXR1cm4gJCgnYVtuYW1lPVwiJyAraGFzaCsgJ1wiXScpLmVxKDApO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRpZiAoJCgnIycgKyBoYXNoKS5sZW5ndGgpXG5cdFx0XHR7XG5cdFx0XHRcdHJldHVybiAkKCcjJyAraGFzaCkuZXEoMCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICgkKCcuc2NyZWVuW2RhdGEtc2NyZWVuPVwiJyArIGhhc2ggKyAnXCJdJykubGVuZ3RoKVxuXHRcdFx0e1xuXHRcdFx0XHRyZXR1cm4gJCgnLnNjcmVlbltkYXRhLXNjcmVlbj1cIicgKyBoYXNoICsgJ1wiXScpLmVxKDApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9LFxuXG5cdFx0aGFzaEp1bXA6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRfdGhpcyA9IHRoaXM7XG5cblx0XHRcdHZhciAkanVtcHRvID0gbnVsbDtcblxuXHRcdFx0aWYgKHdpbmRvdy5sb2NhdGlvbi5oYXNoKVxuXHRcdFx0e1xuXHRcdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xuXG5cdFx0XHRcdCRqdW1wdG8gPSBfdGhpcy5maW5kSnVtcEVsZW1lbnQoaGFzaCArICctYW5jaG9yJyk7XG5cblx0XHRcdFx0aWYgKCRqdW1wdG8gIT09IG51bGwpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHQkc2Nyb2xsV3JhcHBlci5zdG9wKCkuYW5pbWF0ZSh7IHNjcm9sbFRvcDogKCRqdW1wdG8ub2Zmc2V0KCkudG9wICsgMjUpICsgJ3B4JyB9LCAnZmFzdCcpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGJvZHkub24oJ2NsaWNrJywgJy5qLWp1bXB0bycsIGZ1bmN0aW9uKGUpe1xuXG5cdFx0XHRcdGlmICgkKHRoaXMpLmRhdGEoJ2FuY2hvcicpKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0JGp1bXB0byA9IF90aGlzLmZpbmRKdW1wRWxlbWVudCgkKHRoaXMpLmRhdGEoJ2FuY2hvcicpKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmKCQodGhpcykuYXR0cignaHJlZicpKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0JGp1bXB0byA9IF90aGlzLmZpbmRKdW1wRWxlbWVudCgkKHRoaXMpLmF0dHIoJ2hyZWYnKSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHRcdGlmICgkanVtcHRvICE9PSBudWxsKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0JHNjcm9sbFdyYXBwZXIuc3RvcCgpLmFuaW1hdGUoeyBzY3JvbGxUb3A6ICRqdW1wdG8ub2Zmc2V0KCkudG9wICsgJ3B4JyB9LCAnbWVkaXVtJyk7XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0aWYgKCQodGhpcykuaGFzQ2xhc3MoJ2otbmF2aWdhdGlvbicpKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdCQoJyNuYXZpZ2F0aW9uJykuZmluZCgnLmN1cnJlbnQnKS5yZW1vdmVDbGFzcygnY3VycmVudCcpO1xuXHRcdFx0XHRcdFx0JCh0aGlzKS5hZGRDbGFzcygnY3VycmVudCcpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdHVwZGF0ZUltYWdlOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0Ym9keS5vbignY2xpY2snLCAnLmpzLXVwZGF0ZS1pbWFnZScsIGZ1bmN0aW9uKGUpe1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdCQodGhpcykuZmluZCgnaW1nJykuYXR0cignc3JjJywgJCh0aGlzKS5maW5kKCdpbWcnKS5hdHRyKCdzcmMnKS5zcGxpdCgnPycpWzBdICsgJz91PScgKyBNYXRoLnJhbmRvbSgpKTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHR6b29taXQ6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHR2YXIgd3JhcHBlciwgaG9sZGVyLCBpbWFnZTtcblxuXHRcdFx0Ym9keS5vbignY2xpY2snLCAnLmpzLXpvb20taW1hZ2UnLCBmdW5jdGlvbihlKXtcblx0XHRcdFx0XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFx0XHRpbWFnZSA9ICQodGhpcykuYXR0cignaHJlZicpO1xuXG5cdFx0XHRcdGlmICgkKHRoaXMpLmNsb3Nlc3QoJy5qcy16b29tLXdyYXBwZXInKS5sZW5ndGgpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR3cmFwcGVyID0gJCh0aGlzKS5jbG9zZXN0KCcuanMtem9vbS13cmFwcGVyJyk7XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0aWYgKHdyYXBwZXIuZmluZCgnLmpzLXpvb20taG9sZGVyJykubGVuZ3RoKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGhvbGRlciA9IHdyYXBwZXIuZmluZCgnLmpzLXpvb20taG9sZGVyJyk7XG5cblx0XHRcdFx0XHRcdGhvbGRlci5odG1sKCcnKTtcblxuXHRcdFx0XHRcdFx0d3JhcHBlci5maW5kKCcuY3VycmVudCcpLnJlbW92ZUNsYXNzKCdjdXJyZW50Jyk7XG5cblxuXHRcdFx0XHRcdFx0aG9sZGVyLmh0bWwoJzxpbWcgc3JjPVwiJyArIGltYWdlICsgJ1wiIGFsdD1cIlwiPicpO1xuXG5cdFx0XHRcdFx0XHQkKHRoaXMpLmFkZENsYXNzKCdjdXJyZW50Jyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuICExO1xuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdHN1Z2dlc3Rpb25zSW5pdDogZnVuY3Rpb24oKVxuXHRcdHtcblx0XHRcdHZhciBhcGlfa2V5ID0gJzVhYzJmYmYxZjY0MGI3NWI3OGY1ZDQyMTRmZjAwNWZmNTMwM2VhYzgnLCBpbnB1dCA9IG51bGw7XG5cblx0XHRcdGlmICgkKCcuanMtc3VnZ2VzdGlvbnMnKS5sZW5ndGgpXG5cdFx0XHR7XG5cdFx0XHRcdCQoJy5qcy1zdWdnZXN0aW9ucycpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRpbnB1dCA9ICQodGhpcyk7XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0aWYgKGlucHV0LmRhdGEoJ3R5cGUnKSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRpbnB1dC5zdWdnZXN0aW9ucyh7XG5cdFx0XHRcdFx0XHQgICAgc2VydmljZVVybDogXCJodHRwczovL2RhZGF0YS5ydS9hcGkvdjJcIixcblx0XHRcdFx0XHRcdCAgICB0b2tlbjogYXBpX2tleSxcblx0XHRcdFx0XHRcdCAgICB0eXBlOiBpbnB1dC5kYXRhKCd0eXBlJyksXG5cdFx0XHRcdFx0XHQgICAgY291bnQ6IDUsXG5cdFx0XHRcdFx0XHQgICAgb25TZWxlY3Q6IGZ1bmN0aW9uKHN1Z2dlc3Rpb24pIHtcblx0XHRcdFx0XHRcdCAgICAgICAgY29uc29sZS5sb2coc3VnZ2VzdGlvbik7XG5cdFx0XHRcdFx0XHQgICAgfVxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0aW5pdEZvcm06IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRib2R5Lm9uKCdmb2N1cycsICdpbnB1dC5lcnJvcicsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCQodGhpcykucmVtb3ZlQ2xhc3MoJ2Vycm9yJyk7XG5cdFx0XHR9KTtcblxuXHRcdFx0JChcIi5pbnRlZ2VyXCIpLm9uKCdrZXlwcmVzcycsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRcdGlmIChbMCwgOCwgMTMsIDM4LCA0MF0uaW5kZXhPZiggZS53aGljaCApIDwgMCAmJiAoZS53aGljaCA8IDQ4IHx8IGUud2hpY2ggPiA1NykpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRyZXR1cm4gITE7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHQkKFwiLmlnbm9yZS1wYXN0ZVwiKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uIChlKXtcblx0XHRcdFx0aWYgKChlLm1ldGFLZXkgfHwgZS5jdHJsS2V5KSAmJiBlLmtleUNvZGUgPT0gODYpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRyZXR1cm4gITE7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHQkKFwiLmZsb2F0XCIpLm9uKCdrZXlwcmVzcycsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRcdGlmICggWzAsIDgsIDEzLCAzOCwgNDAsIDQ0LCA0Nl0uaW5kZXhPZiggZS53aGljaCApIDwgMCAmJiAoIGUud2hpY2ggPCA0OCB8fCBlLndoaWNoID4gNTcgKSApXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRyZXR1cm4gITE7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRpbml0QWNjb3JkaW9uOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0Ym9keS5vbignY2xpY2snLCAnLmotdG9nZ2xlLWFjY29yZGlvbicsIGZ1bmN0aW9uKGUpe1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdHZhciAkYWNjb3JkaW9uX2l0ZW0gPSAkKHRoaXMpLmNsb3Nlc3QoJy5qLXRvZ2dsZS1pdGVtJyk7XG5cdFx0XHRcdCQodGhpcykudG9nZ2xlQ2xhc3MoJ2N1cnJlbnQnKTtcblx0XHRcdFx0JGFjY29yZGlvbl9pdGVtLmZpbmQoJy5qLXRvZ2dsZS1saXN0JykudG9nZ2xlQ2xhc3MoJ29wZW4nKTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRpbml0OiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0dGhpcy5kaXNhYmxlSG92ZXIoKTtcblxuXHRcdFx0dGhpcy5pbml0UG9wdXAoKTtcblx0XHRcdHRoaXMuaW5pdE1hc2soKTtcblx0XHRcdC8vIHRoaXMuaW5pdFNlbGVjdCgpO1xuXHRcdFx0Ly8gdGhpcy5pbml0U2FuZHdpY2goKTtcblx0XHRcdHRoaXMuaW5pdEFjY29yZGlvbigpO1xuXG5cdFx0XHQvLyB0aGlzLmFqYXhGb3JtLmluaXQoKTtcblx0XHR9XG5cblx0fTtcblxufSkoIGpRdWVyeSApOyIsIjsoIGZ1bmN0aW9uKCAkICkge1xuXHRcInVzZSBzdHJpY3RcIjtcblxuXHQkLmFwcCA9ICQuYXBwIHx8IHt9O1xuXG5cdHZhciAkYm9keSA9ICQoJ2JvZHknKSwgX3RoaXMgPSBudWxsO1xuXG5cdCQuYXBwLmFqYXhGb3JtID0ge1xuXG5cdFx0Y29uZmlnOiB7XG5cdFx0XHRmb3JtX2NsYXNzOiAnLmZvcm0tYWpheCcsXG5cdFx0XHRmb3JtX3Jlc2V0OiAnZm9ybS1yZXNldCcsXG5cdFx0XHRmb3JtX2J1dHRvbjogJy5qLWZvcm0tYnV0dG9uJyxcblx0XHRcdGxpbmtfY2xhc3M6ICcuanMtcmVxdWVzdC1saW5rJyxcblx0XHRcdGVycm9yX2NsYXNzOiAnZXJyb3InLFxuXHRcdFx0ZXJyb3JfbWVzc2FnZTogJ2Zvcm1fX2Vycm9yLW1lc3NhZ2UnLFxuXHRcdFx0Zm9ybV9sYWJlbDogJy5mb3JtX193cmFwcGVyJyxcblx0XHRcdGNoZWNrYm94X2xhYmVsOiAnY2hlY2tib3hfX2xhYmVsJ1xuXHRcdH0sXG5cblx0XHRjYWxsYmFja19zdGFjazoge30sXG5cblx0XHRleHRlbmQ6IGZ1bmN0aW9uKGNvbmZpZylcblx0XHR7XG5cdFx0XHRfdGhpcyA9IHRoaXM7XG5cblx0XHRcdGlmICh0eXBlb2YgY29uZmlnICE9PSAndW5kZWZpbmVkJylcblx0XHRcdHtcblx0XHRcdFx0dmFyIHg7XG5cdFx0XHRcdGZvciAoeCBpbiBjb25maWcpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRpZiAodHlwZW9mIF90aGlzLmNvbmZpZ1t4XSAhPT0gJ3VuZGVmaW5lZCcpXG5cdFx0XHRcdFx0XHRfdGhpcy5jb25maWdbeF0gPSBjb25maWdbeF07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0ZGVmYXVsdF9oYW5kbGVyOiBmdW5jdGlvbigkZm9ybSwgcmVzcG9uc2UpXG5cdFx0e1xuXHRcdFx0X3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRpZiAocmVzcG9uc2Uuc3RhdHVzKVxuXHRcdFx0e1xuXHRcdFx0XHRpZiAocmVzcG9uc2UuaGFzT3duUHJvcGVydHkoJ3JlZGlyZWN0X3VybCcpKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0d2luZG93LmxvY2F0aW9uLmhyZWYgPSByZXNwb25zZS5yZWRpcmVjdF91cmw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGVsc2UgaWYgKHJlc3BvbnNlLmVycm9ycylcblx0XHRcdHtcblx0XHRcdFx0X3RoaXMudmFsaWRhdGlvbigkZm9ybSwgcmVzcG9uc2UuZXJyb3JzKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0aWYgKHJlc3BvbnNlLmhhc093blByb3BlcnR5KCdtZXNzYWdlJykpXG5cdFx0XHR7XG5cdFx0XHRcdCQucG9wdXAubWVzc2FnZShyZXNwb25zZS50aXRsZSwgcmVzcG9uc2UubWVzc2FnZSk7XG5cdFx0XHR9XG5cblx0XHR9LFxuXG5cdFx0dXBsb2FkOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0X3RoaXMgPSB0aGlzO1xuXG5cdFx0XHQkYm9keS5vbignc3VibWl0JywgJy5mb3JtLWZpbGUtdXBsb2FkJywgZnVuY3Rpb24oZSkge1xuXHRcdFx0XHRyZXR1cm4gQUlNLnN1Ym1pdCh0aGlzLCB7XG5cdFx0XHRcdFx0b25TdGFydDogZnVuY3Rpb24oKVxuXHRcdFx0XHRcdHtcblxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0b25Db21wbGV0ZTogZnVuY3Rpb24ocmVzdWx0KVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGlmICh0eXBlb2YgcmVzdWx0ID09PSAnb2JqZWN0JyAmJiByZXN1bHQuc3RhdHVzID09PSB0cnVlICYmIHJlc3VsdC5oYXNPd25Qcm9wZXJ0eSgncGhvdG9fdXJsJykpXG5cdFx0XHRcdFx0XHR7XG5cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0XHRcblx0XHRcdCQoZG9jdW1lbnQpLm9uKCdjaGFuZ2UnLCAnLnVwbG9hZF9idXR0b25fb25jaGFuZ2UnLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRpZiAoJCh0aGlzKS5jbG9zZXN0KCcudXBsb2FkX2J1dHRvbicpLmZpbmQoJy51cGxvYWRfYnV0dG9uX2ZpZWxkJykubGVuZ3RoID4gMClcblx0XHRcdFx0e1xuXHRcdFx0XHRcdCQodGhpcykuY2xvc2VzdCgnLnVwbG9hZF9idXR0b24nKS5maW5kKCcudXBsb2FkX2J1dHRvbl9maWVsZCcpLmh0bWwoJCh0aGlzKS52YWwoKSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHR2YWxpZGF0aW9uOiBmdW5jdGlvbigkZm9ybSwgZXJyb3JzKVxuXHRcdHtcblx0XHRcdF90aGlzID0gdGhpcztcblxuXHRcdFx0JGZvcm0uZmluZCgnLicgKyBfdGhpcy5jb25maWcuZXJyb3JfY2xhc3MpLnJlbW92ZUNsYXNzKF90aGlzLmNvbmZpZy5lcnJvcl9jbGFzcyk7XG5cdFx0XHQkZm9ybS5maW5kKCcuJyArIF90aGlzLmNvbmZpZy5lcnJvcl9tZXNzYWdlKS5yZW1vdmUoKTtcblx0XHRcdFxuXHRcdFx0dmFyIGZpZWxkTmFtZSwgZmllbGQ7XG5cblx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmIChlcnJvcnMpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRmb3IoZmllbGROYW1lIGluIGVycm9ycylcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRpZiAoJGZvcm0uZmluZCgnaW5wdXRbbmFtZT1cIicrZmllbGROYW1lKydcIl0nKS5sZW5ndGggPiAwKVxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRmaWVsZCA9ICRmb3JtLmZpbmQoJ2lucHV0W25hbWU9XCInK2ZpZWxkTmFtZSsnXCJdJyk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmICgkZm9ybS5maW5kKCdzZWxlY3RbbmFtZT1cIicrZmllbGROYW1lKydcIl0nKS5sZW5ndGggPiAwKVxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRmaWVsZCA9ICRmb3JtLmZpbmQoJ3NlbGVjdFtuYW1lPVwiJytmaWVsZE5hbWUrJ1wiXScpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAoJGZvcm0uZmluZCgndGV4dGFyZWFbbmFtZT1cIicrZmllbGROYW1lKydcIl0nKS5sZW5ndGggPiAwKVxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRmaWVsZCA9ICRmb3JtLmZpbmQoJ3RleHRhcmVhW25hbWU9XCInK2ZpZWxkTmFtZSsnXCJdJyk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmIChmaWVsZC5jbG9zZXN0KCcuJyArIF90aGlzLmNvbmZpZy5jaGVja2JveF9sYWJlbCkubGVuZ3RoID4gMClcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0ZmllbGQgPSBmaWVsZC5jbG9zZXN0KCcuJyArIF90aGlzLmNvbmZpZy5jaGVja2JveF9sYWJlbCk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmICh0eXBlb2YgZmllbGQgIT09ICd1bmRlZmluZWQnKVxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRmaWVsZC5hZGRDbGFzcyhfdGhpcy5jb25maWcuZXJyb3JfY2xhc3MpO1xuXHRcdFx0XHRcdFx0XHRmaWVsZC5jbG9zZXN0KF90aGlzLmNvbmZpZy5mb3JtX2xhYmVsKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCInICsgX3RoaXMuY29uZmlnLmVycm9yX21lc3NhZ2UgKyAnXCI+JyArIGVycm9yc1tmaWVsZE5hbWVdICsgJzwvZGl2PicpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSwgMTApO1xuXHRcdH0sXG5cblx0XHRzZW5kOiBmdW5jdGlvbihhY3Rpb24sIG1ldGhvZCwgZGF0YSwgY2IsIGVycilcblx0XHR7XG5cdFx0XHRpZiAodHlwZW9mIGNiICE9PSAnZnVuY3Rpb24nKVxuXHRcdFx0e1xuXHRcdFx0XHRjYiA9IGZ1bmN0aW9uKCkge307XG5cdFx0XHR9XG5cblx0XHRcdGlmICh0eXBlb2YgZXJyICE9PSAnZnVuY3Rpb24nKVxuXHRcdFx0e1xuXHRcdFx0XHRlcnIgPSBmdW5jdGlvbigpIHt9O1xuXHRcdFx0fVxuXG5cdFx0XHR0cnkge1xuXHRcdFx0XG5cdFx0XHRcdCQuYWpheCh7XG5cdFx0XHRcdFx0dXJsOiBhY3Rpb24sXG5cdFx0XHRcdFx0dHlwZTogbWV0aG9kLFxuXHRcdFx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRcdFx0Y29udGVudFR5cGU6IGZhbHNlLFxuXHRcdFx0XHRcdHByb2Nlc3NEYXRhOiBtZXRob2QudG9Mb3dlckNhc2UoKSA9PSAnZ2V0Jyxcblx0XHRcdFx0XHRzdWNjZXNzOiBjYixcblx0XHRcdFx0XHRlcnJvcjogZXJyLFxuXHRcdFx0XHRcdGRhdGFUeXBlOiAnSlNPTidcblx0XHRcdFx0fSk7XG5cblx0XHRcdH0gY2F0Y2goZSl7fVxuXHRcdH0sXG5cblx0XHRpbml0TGluazogZnVuY3Rpb24oKVxuXHRcdHtcblx0XHRcdF90aGlzID0gdGhpcztcblxuXHRcdFx0JGJvZHkub24oJ2NsaWNrJywgX3RoaXMuY29uZmlnLmxpbmtfY2xhc3MsIGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCA/IGUucHJldmVudERlZmF1bHQoKSA6IGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcblx0XHRcdFx0XG5cdFx0XHRcdHZhciAkbGluayA9ICQodGhpcyk7XG5cblx0XHRcdFx0aWYgKCRsaW5rLmRhdGEoJ2lzLWJ1c3knKSkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCRsaW5rLmRhdGEoJ2lzLWJ1c3knLCB0cnVlKTtcblxuXHRcdFx0XHR2YXIgYWN0aW9uID0gKCQodGhpcykuYXR0cignaHJlZicpKSB8fCAkKHRoaXMpLmRhdGEoJ2FjdGlvbicpLFxuXHRcdFx0XHRcdG1ldGhvZCA9ICgkKHRoaXMpLmRhdGEoJ21ldGhvZCcpKSB8fCAnZ2V0Jyxcblx0XHRcdFx0XHRkYXRhID0ge307XG5cblx0XHRcdFx0X3RoaXMuc2VuZChcblx0XHRcdFx0XHRhY3Rpb24sXG5cdFx0XHRcdFx0bWV0aG9kLFxuXHRcdFx0XHRcdGRhdGEsXG5cdFx0XHRcdFx0ZnVuY3Rpb24ocmVzcG9uc2UpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aWYgKCRsaW5rLmRhdGEoJ2NhbGxiYWNrJykgJiYgX3RoaXMuY2FsbGJhY2tfc3RhY2suaGFzT3duUHJvcGVydHkoJGxpbmsuZGF0YSgnY2FsbGJhY2snKSkpXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdF90aGlzLmNhbGxiYWNrX3N0YWNrWyRsaW5rLmRhdGEoJ2NhbGxiYWNrJyldKCRsaW5rLCByZXNwb25zZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdF90aGlzLmRlZmF1bHRfaGFuZGxlcigkbGluaywgcmVzcG9uc2UpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAocmVzcG9uc2Uuc3RhdHVzID09PSB0cnVlKVxuXHRcdFx0XHRcdFx0e1xuXG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdCRsaW5rLmRhdGEoJ2lzLWJ1c3knLCBmYWxzZSk7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRmdW5jdGlvbihyZXNwb25zZSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRfdGhpcy5kZWZhdWx0X2hhbmRsZXIoJGxpbmssIHJlc3BvbnNlKTtcblx0XHRcdFx0XHRcdCRsaW5rLmRhdGEoJ2lzLWJ1c3knLCBmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQpO1xuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdGluaXRGb3JtOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0X3RoaXMgPSB0aGlzO1xuXG5cdFx0XHQkYm9keS5vbignc3VibWl0JywgX3RoaXMuY29uZmlnLmZvcm1fY2xhc3MsIGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCA/IGUucHJldmVudERlZmF1bHQoKSA6IGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcblxuXHRcdFx0XHR2YXIgJGZvcm0gXHQ9ICQodGhpcyksXG5cdFx0XHRcdFx0YWN0aW9uXHQ9ICRmb3JtLmF0dHIoJ2FjdGlvbicpLFxuXHRcdFx0XHRcdG1ldGhvZFx0PSAoJGZvcm0uYXR0cignbWV0aG9kJykgfHwgJ3Bvc3QnKSxcblx0XHRcdFx0XHRkYXRhIFx0PSAhIXdpbmRvdy5Gb3JtRGF0YSA/IG5ldyBGb3JtRGF0YSgkZm9ybVswXSkgOiAkZm9ybS5zZXJpYWxpemUoKTtcblxuXHRcdFx0XHRpZiAoJGZvcm0uZGF0YSgnaXMtYnVzeScpKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0JGZvcm0uZGF0YSgnaXMtYnVzeScsIHRydWUpO1xuXG5cdFx0XHRcdGlmICgkZm9ybS5maW5kKF90aGlzLmNvbmZpZy5mb3JtX2J1dHRvbikubGVuZ3RoKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dmFyICRidXR0b24gPSAkZm9ybS5maW5kKF90aGlzLmNvbmZpZy5mb3JtX2J1dHRvbik7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAodHlwZW9mICRidXR0b24gIT09ICd1bmRlZmluZWQnKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0aWYgKCRidXR0b24uZGF0YSgnbG9hZGluZycpKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdCRidXR0b24uZGF0YSgnb3JpZ2luYWwnLCAkYnV0dG9uLnRleHQoKSk7XG5cdFx0XHRcdFx0XHQkYnV0dG9uLnRleHQoJGJ1dHRvbi5kYXRhKCdsb2FkaW5nJykpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdCRidXR0b24uYWRkQ2xhc3MoJ3ByZWxvYWQnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICgkZm9ybS5kYXRhKCdwcmVjYWxsYmFjaycpICYmIF90aGlzLmNhbGxiYWNrX3N0YWNrLmhhc093blByb3BlcnR5KCRmb3JtLmRhdGEoJ3ByZWNhbGxiYWNrJykpKSB7XG5cdFx0XHRcdFx0aWYoIV90aGlzLmNhbGxiYWNrX3N0YWNrWyRmb3JtLmRhdGEoJ3ByZWNhbGxiYWNrJyldKCRmb3JtKSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0X3RoaXMuc2VuZChcblx0XHRcdFx0XHRhY3Rpb24sXG5cdFx0XHRcdFx0bWV0aG9kLFxuXHRcdFx0XHRcdGRhdGEsXG5cdFx0XHRcdFx0ZnVuY3Rpb24ocmVzcG9uc2UpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aWYgKCRmb3JtLmRhdGEoJ2NhbGxiYWNrJykgJiYgX3RoaXMuY2FsbGJhY2tfc3RhY2suaGFzT3duUHJvcGVydHkoJGZvcm0uZGF0YSgnY2FsbGJhY2snKSkpXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdF90aGlzLmNhbGxiYWNrX3N0YWNrWyRmb3JtLmRhdGEoJ2NhbGxiYWNrJyldKCRmb3JtLCByZXNwb25zZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdF90aGlzLmRlZmF1bHRfaGFuZGxlcigkZm9ybSwgcmVzcG9uc2UpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAoJGZvcm0uaGFzQ2xhc3MoX3RoaXMuY29uZmlnLmZvcm1fcmVzZXQpKVxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHQkZm9ybS5maW5kKCcuJyArIF90aGlzLmNvbmZpZy5lcnJvcl9jbGFzcykucmVtb3ZlQ2xhc3MoX3RoaXMuY29uZmlnLmVycm9yX2NsYXNzKTtcblx0XHRcdFx0XHRcdFx0JGZvcm0uZ2V0KDApLnJlc2V0KCk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmIChyZXNwb25zZS5zdGF0dXMgPT09IHRydWUpXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAodHlwZW9mICRidXR0b24gIT09ICd1bmRlZmluZWQnKVxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRpZiAoJGJ1dHRvbi5kYXRhKCdvcmlnaW5hbCcpKVxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0JGJ1dHRvbi50ZXh0KCRidXR0b24uZGF0YSgnb3JpZ2luYWwnKSk7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQkYnV0dG9uLnJlbW92ZUNsYXNzKCdwcmVsb2FkJyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdCRmb3JtLmRhdGEoJ2lzLWJ1c3knLCBmYWxzZSk7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRmdW5jdGlvbihyZXNwb25zZSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRfdGhpcy5kZWZhdWx0X2hhbmRsZXIoJGZvcm0sIHJlc3BvbnNlKTtcblx0XHRcdFx0XHRcdCRmb3JtLmRhdGEoJ2lzLWJ1c3knLCBmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQpO1xuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdGluaXRWYWxpZGF0ZTogZnVuY3Rpb24oKVxuXHRcdHtcblx0XHRcdCRib2R5Lm9uKCdmb2N1cycsICcuZm9ybV9faW5wdXQuZXJyb3IsIC5mb3JtX190ZXh0YXJlYS5lcnJvcicsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCQodGhpcykucmVtb3ZlQ2xhc3MoJ2Vycm9yJyk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0aW5pdDogZnVuY3Rpb24oY29uZmlnKVxuXHRcdHtcblx0XHRcdGlmICh0eXBlb2YgY29uZmlnICE9PSAndW5kZWZpbmVkJylcblx0XHRcdHtcblx0XHRcdFx0dGhpcy5leHRlbmQoY29uZmlnKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0dGhpcy5pbml0Rm9ybSgpO1xuXHRcdFx0dGhpcy5pbml0TGluaygpO1xuXHRcdFx0dGhpcy5pbml0VmFsaWRhdGUoKTtcblx0XHR9XG5cblx0fTtcblxufSkoIGpRdWVyeSApOyIsIjsoZnVuY3Rpb24gKCQpIHtcblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0JC5hcHAgPSAkLmFwcCB8fCB7fTtcblxuXHR2YXIgX3RoaXM7XG5cblx0JC5hcHAuc2FuZHdpY2ggPSB7XG5cblx0XHRjb25maWc6IHtcblx0XHRcdGtleUhvb2tzOiAhMSxcblx0XHRcdHNlbGVjdG9yOiAnLmpzLXNhbmR3aWNoLW1lbnUnLFxuXHRcdFx0d3JhcHBlcjogJy5sYXlvdXQtd3JhcHBlcicsXG5cdFx0XHRvdmVybGF5OiAnLm92ZXJsYXknXG5cdFx0fSxcblxuXHRcdGV4dGVuZDogZnVuY3Rpb24oY29uZmlnKVxuXHRcdHtcblx0XHRcdF90aGlzID0gdGhpcztcblxuXHRcdFx0aWYgKHR5cGVvZiBjb25maWcgIT09ICd1bmRlZmluZWQnKVxuXHRcdFx0e1xuXHRcdFx0XHR2YXIgeDtcblx0XHRcdFx0Zm9yICh4IGluIGNvbmZpZylcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGlmICh0eXBlb2YgX3RoaXMuY29uZmlnW3hdICE9PSAndW5kZWZpbmVkJylcblx0XHRcdFx0XHRcdF90aGlzLmNvbmZpZ1t4XSA9IGNvbmZpZ1t4XTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRpc09wZW46IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRyZXR1cm4gYm9keS5oYXNDbGFzcygncGFnZS12aXNpYmxlJyk7XG5cdFx0fSxcblxuXHRcdGhpZGU6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRib2R5LnJlbW92ZUNsYXNzKCdwYWdlLW9wZW4nKTtcblxuXHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpe1xuXHRcdFx0XHRib2R5LnJlbW92ZUNsYXNzKCdwYWdlLXZpc2libGUnKTtcblx0XHRcdH0sIDEwKTtcblxuXHRcdFx0JCh0aGlzLmNvbmZpZy5vdmVybGF5KS5jc3Moe1xuXHRcdFx0XHQndmlzaWJpbGl0eSc6ICdoaWRkZW4nXG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0dG9nZ2xlOiBmdW5jdGlvbigpXG5cdFx0e1xuXHRcdFx0aWYgKGJvZHkuaGFzQ2xhc3MoJ3BhZ2UtdmlzaWJsZScpKVxuXHRcdFx0e1xuXHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0Ym9keS5yZW1vdmVDbGFzcygncGFnZS12aXNpYmxlJyk7XG5cdFx0XHRcdH0sIDEwKTtcblx0XHRcdH1cblx0XHRcdGVsc2Vcblx0XHRcdHtcblx0XHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpe1xuXHRcdFx0XHRcdGJvZHkuYWRkQ2xhc3MoJ3BhZ2UtdmlzaWJsZScpO1xuXHRcdFx0XHR9LCAxMCk7XG5cdFx0XHR9XG5cblx0XHRcdGJvZHkudG9nZ2xlQ2xhc3MoJ3BhZ2Utb3BlbicpO1xuXG5cdFx0XHR2YXIgdmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcblxuXHRcdFx0aWYgKCFib2R5Lmhhc0NsYXNzKCdwYWdlLW9wZW4nKSlcblx0XHRcdHtcblx0XHRcdFx0dmlzaWJpbGl0eSA9ICdoaWRkZW4nXG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdCQoX3RoaXMuY29uZmlnLm92ZXJsYXkpLmNzcyh7XG5cdFx0XHRcdCd2aXNpYmlsaXR5JzogdmlzaWJpbGl0eVxuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdHNhbmR3aWNoVHJpZ2dlcjogZnVuY3Rpb24oKVxuXHRcdHtcblx0XHRcdF90aGlzID0gdGhpcztcblxuXHRcdFx0aWYgKF90aGlzLmNvbmZpZy5rZXlIb29rcylcblx0XHRcdHtcblx0XHRcdFx0Ym9keS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0XHRpZihlLmtleUNvZGUgPT0gMjcgJiYgX3RoaXMuaXNPcGVuKCkpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0X3RoaXMudG9nZ2xlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH07XG5cblx0XHRcdGJvZHkub24oJ2NsaWNrJywgX3RoaXMuY29uZmlnLnNlbGVjdG9yLCBmdW5jdGlvbihlKXtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCA/IGUucHJldmVudERlZmF1bHQoKSA6IGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcblx0XHRcdFx0X3RoaXMudG9nZ2xlKCk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0b3ZlcmxheVRyaWdnZXI6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRfdGhpcyA9IHRoaXM7XG5cblx0XHRcdGJvZHkub24oJ2NsaWNrJywgX3RoaXMuY29uZmlnLm92ZXJsYXksIGZ1bmN0aW9uKGUpe1xuXHRcdFx0XHRfdGhpcy5oaWRlKCk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0aW5pdDogZnVuY3Rpb24oY29uZmlnKVxuXHRcdHtcblx0XHRcdHRoaXMuZXh0ZW5kKGNvbmZpZyk7XG5cdFx0XHRcblx0XHRcdHRoaXMuc2FuZHdpY2hUcmlnZ2VyKCk7XG5cdFx0XHR0aGlzLm92ZXJsYXlUcmlnZ2VyKCk7XG5cdFx0fVxuXG5cdH07XG5cbn0pKGpRdWVyeSk7IiwiOyhmdW5jdGlvbiAoJCkge1xuXHRcInVzZSBzdHJpY3RcIjtcblxuXHQkLmFwcCA9ICQuYXBwIHx8IHt9O1xuXG5cdHZhciBib2R5ID0gJCgnYm9keScpLCBfdGhpcywgX3Njcm9sbFRvcCwgX3RpbWVvdXQ7XG5cblx0JC5hcHAuc3RpY2sgPSB7XG5cblx0XHRjb25maWc6IHtcblx0XHRcdGRlbGF5OiAxMCxcblx0XHRcdGVsZW1lbnQ6ICcuanMtc3RpY2snXG5cdFx0fSxcblxuXHRcdGNhY2hlOiBbXSxcblxuXHRcdGNhbGM6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRfdGhpcyA9IHRoaXM7XG5cblx0XHRcdGlmICgkKF90aGlzLmNvbmZpZy5lbGVtZW50KS5sZW5ndGgpXG5cdFx0XHR7XG5cdFx0XHRcdCQoX3RoaXMuY29uZmlnLmVsZW1lbnQpLm1hcChmdW5jdGlvbihpbmRleCkge1xuXHRcdFx0XHRcdCQodGhpcykuYWRkQ2xhc3MoJ2pzLXN0aWNrLScgKyBpbmRleCk7XG5cdFx0XHRcdFx0X3RoaXMuY2FjaGVbaW5kZXhdID0gJCh0aGlzKS5vZmZzZXQoKS50b3A7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRjaGVjazogZnVuY3Rpb24oKVxuXHRcdHtcblx0XHRcdF90aGlzID0gdGhpcztcblxuXHRcdFx0X3Njcm9sbFRvcCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcblxuXHRcdFx0dmFyIHgsIHN0aWNrO1xuXG5cdFx0XHRmb3IoeCBpbiBfdGhpcy5jYWNoZSlcblx0XHRcdHtcblx0XHRcdFx0c3RpY2sgPSAkKCcuanMtc3RpY2stJyArIHgpO1xuXG5cdFx0XHRcdGlmIChfc2Nyb2xsVG9wID49IF90aGlzLmNhY2hlW3hdKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0aWYgKCFzdGljay5oYXNDbGFzcygnc3RpY2tlZCcpKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdHN0aWNrLmFkZENsYXNzKCdzdGlja2VkJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGlmIChzdGljay5oYXNDbGFzcygnc3RpY2tlZCcpKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdHN0aWNrLnJlbW92ZUNsYXNzKCdzdGlja2VkJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGluaXRTY3JvbGw6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHRfdGhpcyA9IHRoaXM7XG5cblx0XHRcdCQod2luZG93KS5vbignc2Nyb2xsJywgZnVuY3Rpb24oZSl7XG5cblx0XHRcdFx0Y2xlYXJUaW1lb3V0KF90aW1lb3V0KTtcblxuXHRcdFx0XHRfdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRfdGhpcy5jaGVjaygpO1xuXG5cdFx0XHRcdH0sIF90aGlzLmNvbmZpZy5kZWxheSk7XG5cdFx0XHRcdFxuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdGluaXQ6IGZ1bmN0aW9uKClcblx0XHR7XG5cdFx0XHR0aGlzLmNhbGMoKTtcblx0XHRcdHRoaXMuY2hlY2soKTtcblx0XHRcdFxuXHRcdFx0dGhpcy5pbml0U2Nyb2xsKCk7XG5cdFx0fVxuXG5cdH07XG5cbn0pKGpRdWVyeSk7IiwiOyhmdW5jdGlvbiAoJCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgJC5hcHAgPSAkLmFwcCB8fCB7fTtcblxuICAgICQuYXBwLnRhYnMgPSB7XG5cbiAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgICBtb3VzZWV2ZW50OiAgICdjbGljaycsXG4gICAgICAgICAgICBhdHRyaWJ1dGU6ICAgICdocmVmJyxcbiAgICAgICAgICAgIGFuaW1hdGlvbjogICAgZmFsc2UsXG4gICAgICAgICAgICBhdXRvcm90YXRlOiAgIGZhbHNlLFxuICAgICAgICAgICAgcGF1c2VvbmhvdmVyOiB0cnVlLFxuICAgICAgICAgICAgZGVsYXk6ICAgICAgICAyMDAwLFxuICAgICAgICAgICAgYWN0aXZlOiAgICAgICAxLFxuICAgICAgICAgICAgY29udGFpbmVyOiAgICBmYWxzZSxcbiAgICAgICAgICAgIGNvbnRyb2xzOiAgICAge1xuICAgICAgICAgICAgICAgIHByZXY6ICcucHJldicsXG4gICAgICAgICAgICAgICAgbmV4dDogJy5uZXh0J1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGV4dGVuZDogZnVuY3Rpb24oY29uZmlnKVxuICAgICAgICB7XG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29uZmlnICE9PSAndW5kZWZpbmVkJylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgeDtcbiAgICAgICAgICAgICAgICBmb3IgKHggaW4gY29uZmlnKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBfdGhpcy5jb25maWdbeF0gIT09ICd1bmRlZmluZWQnKVxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuY29uZmlnW3hdID0gY29uZmlnW3hdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbihjb25maWcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuZXh0ZW5kKGNvbmZpZyk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbn0pKGpRdWVyeSk7IiwidmFyIHRvb2xzID0ge1xuICAgIGlzU3RyaW5nOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSAnc3RyaW5nJztcbiAgICB9LFxuICAgIGlzT2JqZWN0OiBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JztcbiAgICB9LFxuICAgIGlzTnVtYmVyOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSAnbnVtYmVyJztcbiAgICB9LFxuICAgIGlzVW5kZWZpbmVkOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCc7XG4gICAgfSxcbiAgICBpc0RlZmluZWQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJztcbiAgICB9LFxuICAgIGlzTnVsbDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA9PSBudWxsO1xuICAgIH1cbn07XG5cbi8vIGV2ZW50LnR5cGUg0LTQvtC70LbQtdC9INCx0YvRgtGMIGtleXByZXNzXG5mdW5jdGlvbiBnZXRDaGFyKGV2ZW50KVxue1xuICAgIGlmIChldmVudC53aGljaCA9PSBudWxsKSB7IC8vIElFXG4gICAgICAgIGlmIChldmVudC5rZXlDb2RlIDwgMzIpIHJldHVybiBudWxsOyAvLyDRgdC/0LXRhi4g0YHQuNC80LLQvtC7XG4gICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGV2ZW50LmtleUNvZGUpXG4gICAgfVxuXG4gICAgaWYgKGV2ZW50LndoaWNoICE9IDAgJiYgZXZlbnQuY2hhckNvZGUgIT0gMCkgeyAvLyDQstGB0LUg0LrRgNC+0LzQtSBJRVxuICAgICAgICBpZiAoZXZlbnQud2hpY2ggPCAzMikgcmV0dXJuIG51bGw7IC8vINGB0L/QtdGGLiDRgdC40LzQstC+0LtcbiAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZXZlbnQud2hpY2gpOyAvLyDQvtGB0YLQsNC70YzQvdGL0LVcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDsgLy8g0YHQv9C10YYuINGB0LjQvNCy0L7Qu1xufVxuXG5mdW5jdGlvbiBvbihlbG0sIGV2ZW50cywgaGFuZGxlcilcbntcbiAgIGlmIChlbG0pIHtcbiAgICAgICBldmVudHMuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICBlbG0uYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlcik7XG4gICAgICAgfSk7XG4gICB9XG59XG5cbmZ1bmN0aW9uIHNjcm9sbFRvRWxlbWVudChlbGVtZW50KVxue1xuICAgIGlmICgkKGVsZW1lbnQpLmxlbmd0aClcbiAgICB7XG4gICAgICAgIHZhciBibG9jaztcblxuICAgICAgICBpZiAoJChlbGVtZW50KS5jbG9zZXN0KCcucG9wdXAnKS5sZW5ndGgpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJsb2NrID0gJChlbGVtZW50KS5jbG9zZXN0KCcucG9wdXAnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJsb2NrID0gJChlbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJsb2NrLnN0b3AoKS5hbmltYXRlKHsgc2Nyb2xsVG9wOiAkKGVsZW1lbnQpLnBvc2l0aW9uKCkudG9wIH0sICdmYXN0Jyk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBmb3JtYXRNb25leShuLCBjLCBkLCB0KVxue1xuICAgIHZhciBjID0gaXNOYU4oYyA9IE1hdGguYWJzKGMpKSA/IDIgOiBjLCBcbiAgICBkID0gZCA9PSB1bmRlZmluZWQgPyAnLicgOiBkLCBcbiAgICB0ID0gdCA9PSB1bmRlZmluZWQgPyAnLCcgOiB0LCBcbiAgICBzID0gbiA8IDAgPyAnLScgOiAnJywgXG4gICAgaSA9IHBhcnNlSW50KG4gPSBNYXRoLmFicygrbiB8fCAwKS50b0ZpeGVkKGMpKSArICcnLFxuICAgIGogPSAoaiA9IGkubGVuZ3RoKSA+IDMgPyBqICUgMyA6IDA7XG4gICAgcmV0dXJuIHMgKyAoaiA/IGkuc3Vic3RyKDAsIGopICsgdCA6ICcnKSArIGkuc3Vic3RyKGopLnJlcGxhY2UoLyhcXGR7M30pKD89XFxkKS9nLCAnJDEnICsgdCkgKyAoYyA/IGQgKyBNYXRoLmFicyhuIC0gaSkudG9GaXhlZChjKS5zbGljZSgyKSA6ICcnKTtcbn1cblxuZnVuY3Rpb24gZ2V0TWF4KGFycilcbntcbiAgICByZXR1cm4gTWF0aC5tYXguYXBwbHkoTWF0aCwgYXJyKTtcbn1cblxuZnVuY3Rpb24gZ2V0TWluKGFycilcbntcbiAgICByZXR1cm4gTWF0aC5taW4uYXBwbHkoTWF0aCwgYXJyKTtcbn1cblxuZnVuY3Rpb24gaXNfbnVsbCh4KVxue1xuXHRyZXR1cm4geCA9PSBudWxsO1xufVxuXG5mdW5jdGlvbiBpc191bmRlZmluZWQoeClcbntcblx0cmV0dXJuIHR5cGVvZih4KSA9PSAndW5kZWZpbmVkJztcbn1cblxuZnVuY3Rpb24gaXNfdG91Y2hfZGV2aWNlKClcbntcbiAgICByZXR1cm4gKFwib250b3VjaHN0YXJ0XCIgaW4gd2luZG93IHx8IHdpbmRvdy5Eb2N1bWVudFRvdWNoICYmIGRvY3VtZW50IGluc3RhbmNlb2YgRG9jdW1lbnRUb3VjaCB8fCAnb25tc2dlc3R1cmVjaGFuZ2UnIGluIHdpbmRvdyk7XG59XG5cbmZ1bmN0aW9uIGRlY2xPZk51bShudW1iZXIsIHRpdGxlcykgeyAgXG4gICAgY2FzZXMgPSBbMiwgMCwgMSwgMSwgMSwgMl07ICBcbiAgICByZXR1cm4gdGl0bGVzWyAobnVtYmVyJTEwMD40ICYmIG51bWJlciUxMDA8MjApPyAyIDogY2FzZXNbKG51bWJlciUxMDw1KT9udW1iZXIlMTA6NV0gXTsgIFxufVxuLy8gZGVjbE9mTnVtKGNvdW50LCBbJ9C90LDQudC00LXQvdCwJywgJ9C90LDQudC00LXQvdC+JywgJ9C90LDQudC00LXQvdGLJ10pO1xuXG52YXIgc2h1ZmZsZSA9IGZ1bmN0aW9uKCBhcnJheSApIHtcblx0cmV0dXJuIGFycmF5LnNvcnQoIGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBNYXRoLnJhbmRvbSgpIC0gMC41O1xuXHR9ICk7XG59O1xuXG5mdW5jdGlvbiB1cGRhdGVDYXB0Y2hhKGNhcHRjaGEsIGV2KVxue1xuICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAoJChjYXB0Y2hhKS5sZW5ndGgpXG4gICAge1xuICAgICAgICAkKGNhcHRjaGEpLmF0dHIoJ3NyYycsICQoY2FwdGNoYSkuYXR0cignc3JjJykuc3BsaXQoICc/JyApWzBdICsgJz92PScgKyBNYXRoLnJhbmRvbSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gITE7XG59XG5cbi8vINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGE0YPQvdC60YbQuNGOLCDQutC+0YLQvtGA0LDRjyDQvdC1INCx0YPQtNC10YIg0YHRgNCw0LHQsNGC0YvQstCw0YLRjCwg0L/QvtC60LAg0L/RgNC+0LTQvtC70LbQsNC10YIg0LLRi9C30YvQstCw0YLRjNGB0Y8uXG4vLyDQntC90LAg0YHRgNCw0LHQvtGC0LDQtdGCINGC0L7Qu9GM0LrQviDQvtC00LjQvSDRgNCw0Lcg0YfQtdGA0LXQtyBOINC80LjQu9C70LjRgdC10LrRg9C90LQg0L/QvtGB0LvQtSDQv9C+0YHQu9C10LTQvdC10LPQviDQstGL0LfQvtCy0LAuXG4vLyDQldGB0LvQuCDQtdC5INC/0LXRgNC10LTQsNC9INCw0YDQs9GD0LzQtdC90YIgYGltbWVkaWF0ZWAsINGC0L4g0L7QvdCwINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAg0L7QtNC40L0g0YDQsNC3INGB0YDQsNC30YMg0L/QvtGB0LvQtVxuLy8g0L/QtdGA0LLQvtCz0L4g0LfQsNC/0YPRgdC60LAuXG5mdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcbiAgICB2YXIgdGltZW91dDtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBjb250ZXh0ID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgdmFyIGxhdGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgIGlmICghaW1tZWRpYXRlKSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG4gICAgICAgIGlmIChjYWxsTm93KSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgIH07XG59O1xuXG4vLyDQmNGB0L/QvtC70YzQt9C+0LLQsNC90LjQtVxuLy8gdmFyIG15RWZmaWNpZW50Rm4gPSBkZWJvdW5jZShmdW5jdGlvbigpIHtcbi8vIEFsbCB0aGUgdGF4aW5nIHN0dWZmIHlvdSBkb1xuLy8gfSwgMjUwKTtcbi8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBteUVmZmljaWVudEZuKTtcblxuXG5mdW5jdGlvbiBvbmNlKGZuLCBjb250ZXh0KSB7IFxuICAgIHZhciByZXN1bHQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7IFxuICAgICAgICBpZihmbikge1xuICAgICAgICAgICAgcmVzdWx0ID0gZm4uYXBwbHkoY29udGV4dCB8fCB0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgZm4gPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufVxuXG4vLyAvLyDQn9GA0LjQvNC10YAg0LjRgdC/0L7Qu9GM0LfQvtCy0LDQvdC40Y9cbi8vIHZhciBjYW5Pbmx5RmlyZU9uY2UgPSBvbmNlKGZ1bmN0aW9uKCkge1xuLy8gICAgIGNvbnNvbGUubG9nKCfQl9Cw0L/Rg9GJ0LXQvdC+IScpO1xuLy8gfSk7XG5cbi8vIGNhbk9ubHlGaXJlT25jZSgpOyAvLyBcItCX0LDQv9GD0YnQtdC90L4hXCJcbi8vIGNhbk9ubHlGaXJlT25jZSgpOyAvLyDQndC1INC30LDQv9GD0YnQtdC90L5cblxuXG52YXIgZ2V0QWJzb2x1dGVVcmwgPSAoZnVuY3Rpb24oKSB7XG4gICAgdmFyIGE7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24odXJsKSB7XG4gICAgICAgIGlmKCFhKSBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgICBhLmhyZWYgPSB1cmw7XG5cbiAgICAgICAgcmV0dXJuIGEuaHJlZjtcbiAgICB9O1xufSkoKTtcblxuLy8g0J/RgNC40LzQtdGAINC40YHQv9C+0LvRjNC30L7QstCw0L3QuNGPXG4vLyBnZXRBYnNvbHV0ZVVybCgnL3NvbWV0aGluZycpO1xuXG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHMxINCY0YHRhdC+0LTQvdCw0Y8g0YHRgtGA0L7QutCwXG4gKiBAcGFyYW0ge3N0cmluZ30gczIg0KHRgNCw0LLQvdC40LLQsNC10LzQsNGPINGB0YLRgNC+0LrQsFxuICogQHBhcmFtIHtvYmplY3R9IFtjb3N0c10g0JLQtdGB0LAg0L7Qv9C10YDQsNGG0LjQuSB7IFtyZXBsYWNlXSwgW3JlcGxhY2VDYXNlXSwgW2luc2VydF0sIFtyZW1vdmVdIH1cbiAqIEByZXR1cm4ge251bWJlcn0g0KDQsNGB0YHRgtC+0Y/QvdC40LUg0JvQtdCy0LXQvdGI0YLQtdC50L3QsFxuICovXG5mdW5jdGlvbiBsZXZlbnNodGVpbihzMSwgczIsIGNvc3RzKSB7XG4gICAgdmFyIGksIGosIGwxLCBsMiwgZmxpcCwgY2gsIGNobCwgaWksIGlpMiwgY29zdCwgY3V0SGFsZjtcbiAgICBsMSA9IHMxLmxlbmd0aDtcbiAgICBsMiA9IHMyLmxlbmd0aDtcblxuICAgIGNvc3RzID0gY29zdHMgfHwge307XG4gICAgdmFyIGNyID0gY29zdHMucmVwbGFjZSB8fCAxO1xuICAgIHZhciBjcmkgPSBjb3N0cy5yZXBsYWNlQ2FzZSB8fCBjb3N0cy5yZXBsYWNlIHx8IDE7XG4gICAgdmFyIGNpID0gY29zdHMuaW5zZXJ0IHx8IDE7XG4gICAgdmFyIGNkID0gY29zdHMucmVtb3ZlIHx8IDE7XG5cbiAgICBjdXRIYWxmID0gZmxpcCA9IE1hdGgubWF4KGwxLCBsMik7XG5cbiAgICB2YXIgbWluQ29zdCA9IE1hdGgubWluKGNkLCBjaSwgY3IpO1xuICAgIHZhciBtaW5EID0gTWF0aC5tYXgobWluQ29zdCwgKGwxIC0gbDIpICogY2QpO1xuICAgIHZhciBtaW5JID0gTWF0aC5tYXgobWluQ29zdCwgKGwyIC0gbDEpICogY2kpO1xuICAgIHZhciBidWYgPSBuZXcgQXJyYXkoKGN1dEhhbGYgKiAyKSAtIDEpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8PSBsMjsgKytpKSB7XG4gICAgICAgIGJ1ZltpXSA9IGkgKiBtaW5EO1xuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBsMTsgKytpLCBmbGlwID0gY3V0SGFsZiAtIGZsaXApIHtcbiAgICAgICAgY2ggPSBzMVtpXTtcbiAgICAgICAgY2hsID0gY2gudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICBidWZbZmxpcF0gPSAoaSArIDEpICogbWluSTtcblxuICAgICAgICBpaSA9IGZsaXA7XG4gICAgICAgIGlpMiA9IGN1dEhhbGYgLSBmbGlwO1xuXG4gICAgICAgIGZvciAoaiA9IDA7IGogPCBsMjsgKytqLCArK2lpLCArK2lpMikge1xuICAgICAgICAgICAgY29zdCA9IChjaCA9PT0gczJbal0gPyAwIDogKGNobCA9PT0gczJbal0udG9Mb3dlckNhc2UoKSkgPyBjcmkgOiBjcik7XG4gICAgICAgICAgICBidWZbaWkgKyAxXSA9IE1hdGgubWluKGJ1ZltpaTIgKyAxXSArIGNkLCBidWZbaWldICsgY2ksIGJ1ZltpaTJdICsgY29zdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGJ1ZltsMiArIGN1dEhhbGYgLSBmbGlwXTtcbn1cblx0XG4vLyBmdW5jdGlvbiBkb09uT3JpZW50YXRpb25DaGFuZ2UoKVxuLy8ge1xuLy8gXHRzd2l0Y2god2luZG93Lm9yaWVudGF0aW9uKSBcbi8vIFx0eyAgXG4vLyBcdFx0Y2FzZSAtOTA6XG4vLyBcdFx0Y2FzZSA5MDpcbi8vIFx0XHRhbGVydCgnbGFuZHNjYXBlJyk7XG4vLyBcdFx0YnJlYWs7IFxuLy8gXHRcdGRlZmF1bHQ6XG4vLyBcdFx0YWxlcnQoJ3BvcnRyYWl0Jyk7XG4vLyBcdFx0YnJlYWs7IFxuLy8gXHR9XG4vLyB9XG5cbi8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvcmllbnRhdGlvbmNoYW5nZScsIGRvT25PcmllbnRhdGlvbkNoYW5nZSk7XG5cbi8vIGRvT25PcmllbnRhdGlvbkNoYW5nZSgpO1xuXG5cbi8vIFNtb290aGx5IFNjcm9sbCB0byBwYWdlIGFuY2hvcnNcbi8vIHZhciBqdW1wID0gZnVuY3Rpb24gKGUpIHtcbi8vIC8vIFN0b3AgdGhlIFwiaGFyZFwiIGp1bXAuXG4vLyBlLnByZXZlbnREZWZhdWx0KCk7XG4vLyAvL0dldCB0aGUgdGFyZ2V0XG4vLyB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5hdHRyKFwiaHJlZlwiKTtcbi8vIC8vIFVzZSBhbmltYXRlZCBzY3JvbGxpbmcuICBUaGUgLnN0b3AoKSBwcmV2ZW50cyBzY3JvbGwgcXVldWUuXG4vLyAkKCdodG1sLGJvZHknKS5zdG9wKCkuYW5pbWF0ZSh7XG4vLyAgIC8vIEZpbmQgdG9wLXBvc2l0aW9uIG9mIHRhcmdldC1lbGVtZW50IGFuZCBzZXQgaXQgYXMgc2Nyb2xsIHRhcmdldC5cbi8vICAgc2Nyb2xsVG9wOiAkKHRhcmdldCkub2Zmc2V0KCkudG9wXG4vLyAgIC8vIEFuaW1hdGlvbiBEZWxheTpcbi8vICAgfSwgNTAwLCBmdW5jdGlvbiAoKSB7XG4vLyAgICAgLy8gQXR0YWNoIHRoZSBoYXNoICgjanVtcHRhcmdldCkgdG8gdGhlIHBhZ2UgdXJsLlxuLy8gICAgIGxvY2F0aW9uLmhhc2ggPSB0YXJnZXQ7XG4vLyAgIH0pO1xuLy8gfVxuXG4vLyAvLyBJbnN0YW50aWF0ZSB0aGlzIGFzIGZvbGxvd3MgaW4geW91ciBkb2N1bWVudC5yZWFkeSgpO1xuLy8gLy8kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG4vLyAvLyQoJ2FbaHJlZio9I10nKS5iaW5kKFwiY2xpY2tcIiwganVtcCk7XG4vLyAvL3JldHVybiBmYWxzZTtcbi8vIC8vfSk7IiwiZnVuY3Rpb24gZ29vZ2xlTWFwKClcbntcblx0dmFyIGFyciA9IHtcblx0XHQnbW9zY293Jzoge1xuXHRcdFx0Y2l0eTogJ9CzLiDQnNC+0YHQutCy0LAnLFxuXHRcdFx0dGl0bGU6ICfQnNC+0YHQutCy0LAnLFxuXHRcdFx0c3RyZWV0OiAn0JLQtdGA0YXQvdGP0Y8g0JzQsNGB0LvQvtCy0LrQsCwg0LQuIDIwLCDRgdGC0YAuIDEuJyxcblx0XHRcdHBob25lOiAnKDQ5NSkgNjQ1LTgzLTU0Jyxcblx0XHRcdGVtYWlsOiAnaW5mb0BpdHNudGsucnUnLFxuXHRcdFx0Y29vcmRzOiBbIDU1Ljc5NTMxNiwzNy41NjIyNzIgXVxuXHRcdH0sXG5cdFx0J2tyYXNub2Rhcic6IHtcblx0XHRcdGNpdHk6ICfQsy4g0JrRgNCw0YHQvdC+0LTQsNGAJyxcblx0XHRcdHRpdGxlOiAn0JrRgNCw0YHQvdC+0LTQsNGAJyxcblx0XHRcdHN0cmVldDogJ9GD0LsuINCU0LDQu9GM0L3Rj9GPLCAzOS8zJyxcblx0XHRcdHBob25lOiAnKDg2MSkgMjc4LTk4LTM0Jyxcblx0XHRcdGVtYWlsOiAnaW5mb0BpdHNudGsucnUnLFxuXHRcdFx0Y29vcmRzOiBbIDQ1LjA2MDkzMiwzOC45NjQ1NzUgXVxuXHRcdH1cblx0fTtcblxuXHR2YXIgbWFwT3B0aW9ucyA9IHtcblx0XHR6b29tOiAxMyxcblx0XHR6b29tQ29udHJvbDogITAsXG5cdFx0em9vbUNvbnRyb2xPcHRpb25zOiB7XG5cdFx0XHRzdHlsZTogZ29vZ2xlLm1hcHMuWm9vbUNvbnRyb2xTdHlsZS5MQVJHRSxcblx0XHRcdHBvc2l0aW9uOiBnb29nbGUubWFwcy5Db250cm9sUG9zaXRpb24uTEVGVF9UT1Bcblx0XHR9LFxuXHRcdHBhbkNvbnRyb2w6ICExLFxuXHRcdHBhbkNvbnRyb2xPcHRpb25zOiB7XG5cdFx0XHRwb3NpdGlvbjogZ29vZ2xlLm1hcHMuQ29udHJvbFBvc2l0aW9uLkxFRlRfVE9QXG5cdFx0fSxcblx0XHRzY3JvbGx3aGVlbDogITEsXG5cdFx0bmF2aWdhdGlvbkNvbnRyb2w6ICExLFxuXHRcdG1hcFR5cGVDb250cm9sOiAhMSxcblx0XHRzY2FsZUNvbnRyb2w6ICEwLFxuXHRcdGRyYWdnYWJsZTogITAsXG5cdFx0ZGlzYWJsZURvdWJsZUNsaWNrWm9vbTogITEsXG5cdFx0Y2VudGVyOiBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGFyci5rcmFzbm9kYXIuY29vcmRzWzBdLCBhcnIua3Jhc25vZGFyLmNvb3Jkc1sxXSlcblx0fTtcblxuXHR2YXIgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwLWNvbnRlaW5lcicpLCBtYXBPcHRpb25zKTtcblxuXHRmdW5jdGlvbiBhZGRNYXJrZXIoIGFyLCBtYXAgKVxuXHR7XG5cdFx0dmFyIGNvbnRlbnRTdHJpbmcgPSBbXG5cdFx0XHQnPGRpdiBjbGFzcz1cIm1hcC1jb250ZW50XCI+Jyxcblx0XHRcdFx0JzxoMiBjbGFzcz1cImZpcnN0SGVhZGluZ1wiPicrIGFyWyd0aXRsZSddICsgJzwvaDI+Jyxcblx0XHRcdFx0JzxkaXYgY2xhc3M9XCJtYXAtYm9keUNvbnRlbnRcIj4nLFxuXHRcdFx0XHRcdCc8cD4nICsgYXJbJ2NpdHknXSArICc8L3A+Jyxcblx0XHRcdFx0XHQnPHA+JyArIGFyWydzdHJlZXQnXSArICc8L3A+Jyxcblx0XHRcdFx0XHQnPHA+PHNwYW4+0KLQtdC70LXRhNC+0L06PC9zcGFuPicgKyBhclsncGhvbmUnXSArICc8L3A+Jyxcblx0XHRcdFx0XHQnPHA+PHNwYW4+RW1haWw6PC9zcGFuPicgKyBhclsnZW1haWwnXSArICc8L3A+Jyxcblx0XHRcdFx0JzwvZGl2PicsXG5cdFx0XHQnPC9kaXY+J1xuXHRcdF0uam9pbignJyk7XG5cblx0XHR2YXIgaW5mb3dpbmRvdyA9IG5ldyBnb29nbGUubWFwcy5JbmZvV2luZG93KHtcblx0XHRcdGNvbnRlbnQ6IGNvbnRlbnRTdHJpbmcsXG5cdFx0XHRkaXNhYmxlQXV0b1BhbjogdHJ1ZSxcblx0XHRcdG1heFdpZHRoOiA1MDBcblx0XHR9KTtcblxuXHRcdHZhciBpbWFnZSA9IHtcblx0XHRcdHVybDogJy4vaW1hZ2VzL21hcC1tYXJrZXIucG5nJyxcblx0XHRcdHNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDE4LCAyNSksXG5cdFx0XHRvcmlnaW46IG5ldyBnb29nbGUubWFwcy5Qb2ludCgwLCAwKSxcblx0XHRcdHNjYWxlZFNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDE4LCAyNSksXG5cdFx0XHRhbmNob3I6IG5ldyBnb29nbGUubWFwcy5Qb2ludCgxOCwgMjUpXG5cdFx0fTtcblxuXHRcdHZhciBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcblx0XHRcdHBvc2l0aW9uOiBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKCBhclsnY29vcmRzJ11bMF0sIGFyWydjb29yZHMnXVsxXSApLFxuXHRcdFx0bWFwOiBtYXAsXG5cdFx0XHRpY29uOiBpbWFnZSxcblx0XHRcdGZsYXQ6IHRydWUsXG5cdFx0XHR0aXRsZTogYXJbJ3RpdGxlJ11cblx0XHR9KTtcblxuXHRcdGdvb2dsZS5tYXBzLmV2ZW50LmFkZExpc3RlbmVyKG1hcmtlciwgJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRpZihpbmZvd2luZG93KVxuXHRcdFx0e1xuXHRcdFx0XHRpbmZvd2luZG93LmNsb3NlKCk7XG5cdFx0XHR9XG5cblx0XHRcdGluZm93aW5kb3cub3BlbihtYXAsIG1hcmtlcik7XG5cdFx0fSk7XG5cdH1cblx0XG5cdGZvciAodmFyIGkgaW4gYXJyKVxuXHR7XG5cdFx0YWRkTWFya2VyKGFycltpXSwgbWFwKTtcblx0fVxuXG5cdCQoJ2JvZHknKS5vbignY2xpY2snLCAnLmpzLXRvZ2dsZS1jbGFzcycsIGZ1bmN0aW9uKGUpe1xuXHRcdHZhciB3cmFwcGVyID0gJCh0aGlzKS5jbG9zZXN0KCcuanMtdG9nZ2xlLXdyYXBwZXInKSwgY2l0eSA9ICcnO1xuXG5cdFx0aWYgKCQodGhpcykuZGF0YSgnY2l0eScpKVxuXHRcdHtcblx0XHRcdGNpdHkgPSAkKHRoaXMpLmRhdGEoJ2NpdHknKTtcblx0XHRcdG1hcC5zZXRab29tKDEzKTtcblx0XHRcdG1hcC5zZXRDZW50ZXIoe2xhdDogYXJyW2NpdHldLmNvb3Jkc1swXSwgbG5nOiBhcnJbY2l0eV0uY29vcmRzWzFdIH0pO1xuXHRcdH1cblx0fSk7XG59IiwiKGZ1bmN0aW9uKCQpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICQubmF2aWdhdGlvbiA9IHtcbiAgICAgICAgb3B0aW9uczpcbiAgICAgICAge1xuICAgICAgICAgICAgbWVudTogJycsXG4gICAgICAgICAgICBsaW5rOiAnJyxcbiAgICAgICAgICAgIGFuY2hvcjogJycsXG4gICAgICAgICAgICBjdXJyZW50Q2xhc3M6ICcnLFxuICAgICAgICAgICAgbWVudUhlaWdodDogMCxcbiAgICAgICAgICAgIGxhc3RJZDogJycsXG4gICAgICAgICAgICBzY3JvbGxJdGVtczogW10sXG4gICAgICAgICAgICBtZW51SXRlbXM6IFtdLFxuICAgICAgICAgICAgbWVudVBvc2l0aW9uOiAwXG4gICAgICAgIH0sXG5cbiAgICAgICAgY2hhbmdlOiBmdW5jdGlvbihzY3JvbGxUb3ApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHNjcm9sbFRvcCArPSAkLm5hdmlnYXRpb24ub3B0aW9ucy5tZW51SGVpZ2h0O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgY3VyID0gJC5uYXZpZ2F0aW9uLm9wdGlvbnMuc2Nyb2xsSXRlbXMubWFwKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykub2Zmc2V0KCkudG9wIDwgc2Nyb2xsVG9wKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGN1ciA9IGN1cltjdXIubGVuZ3RoLTFdO1xuICAgICAgICAgICAgdmFyIGlkID0gY3VyICYmIGN1ci5sZW5ndGggPyBjdXJbMF0uaWQgOiBcIlwiO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoJC5uYXZpZ2F0aW9uLm9wdGlvbnMubGFzdElkICE9PSBpZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgc2VjdGlvbiA9IGlkLnJlcGxhY2UoJC5uYXZpZ2F0aW9uLm9wdGlvbnMuYW5jaG9yLCAnJyksXG4gICAgICAgICAgICAgICAgICAgICRpdGVtID0gJC5uYXZpZ2F0aW9uLm9wdGlvbnMubWVudUl0ZW1zLmZpbHRlcignW2hyZWY9XCIjJytzZWN0aW9uKydcIl0nKTtcblxuICAgICAgICAgICAgICAgICQubmF2aWdhdGlvbi5vcHRpb25zLmxhc3RJZCA9IGlkO1xuICAgICAgICAgICAgICAgICQubmF2aWdhdGlvbi5vcHRpb25zLm1lbnVJdGVtcy5yZW1vdmVDbGFzcygkLm5hdmlnYXRpb24ub3B0aW9ucy5jdXJyZW50Q2xhc3MpO1xuICAgICAgICAgICAgICAgICRpdGVtLmFkZENsYXNzKCQubmF2aWdhdGlvbi5vcHRpb25zLmN1cnJlbnRDbGFzcyk7XG5cbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5oYXNoID0gc2VjdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBjYWxjOiBmdW5jdGlvbigpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciAkaXRlbTtcblxuICAgICAgICAgICAgJC5uYXZpZ2F0aW9uLm9wdGlvbnMuc2Nyb2xsSXRlbXMgPSAkLm5hdmlnYXRpb24ub3B0aW9ucy5tZW51SXRlbXMubWFwKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgJGl0ZW0gPSAkKHRoaXMuaGFzaCArICQubmF2aWdhdGlvbi5vcHRpb25zLmFuY2hvcik7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKCRpdGVtLmxlbmd0aClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkaXRlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBzY3JvbGxTZWN0aW9uOiBmdW5jdGlvbihoYXNoLCBhbmltYXRlKVxuICAgICAgICB7XG4gICAgICAgICAgICBoYXNoID0gaGFzaCArICQubmF2aWdhdGlvbi5vcHRpb25zLmFuY2hvcjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdmFyICR0YXJnZXQgPSAkKGhhc2gpO1xuXG4gICAgICAgICAgICBpZiAoJHRhcmdldC5sZW5ndGgpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdmFyIHRvcCA9ICR0YXJnZXQub2Zmc2V0KCkudG9wIC0gMTU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKGFuaW1hdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgJCgnaHRtbCxib2R5Jykuc3RvcCgpLmFuaW1hdGUoeyAnc2Nyb2xsVG9wJzogdG9wIH0sICdmYXN0JywgJ2Vhc2VJbk91dENpcmMnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICQoJ2h0bWwsYm9keScpLnNjcm9sbFRvcCh0b3ApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbihvcHRpb25zKVxuICAgICAgICB7XG4gICAgICAgICAgICAkLm5hdmlnYXRpb24ub3B0aW9ucyA9ICQuZXh0ZW5kKG9wdGlvbnMpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgJG1lbnUgPSAkKCQubmF2aWdhdGlvbi5vcHRpb25zLm1lbnUpO1xuXG4gICAgICAgICAgICBpZiAoJG1lbnUubGVuZ3RoKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICQubmF2aWdhdGlvbi5vcHRpb25zLm1lbnVIZWlnaHQgPSAkbWVudS5vdXRlckhlaWdodCgpO1xuICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJC5uYXZpZ2F0aW9uLm9wdGlvbnMubWVudUl0ZW1zID0gJCgkLm5hdmlnYXRpb24ub3B0aW9ucy5saW5rKTtcbiAgICAgICAgICAgICAgICAkLm5hdmlnYXRpb24ub3B0aW9ucy5tZW51UG9zaXRpb24gPSAkbWVudS5wb3NpdGlvbigpLnRvcDtcbiAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJC5uYXZpZ2F0aW9uLmNhbGMoKTtcbiAgICBcbiAgICAgICAgICAgICAgICAkLm5hdmlnYXRpb24ub3B0aW9ucy5tZW51SXRlbXMub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICAkLm5hdmlnYXRpb24uc2Nyb2xsU2VjdGlvbih0aGlzLmhhc2gsIHRydWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAkLm5hdmlnYXRpb24uY2hhbmdlKCQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpKTtcblxuICAgICAgICAgICAgICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgJC5uYXZpZ2F0aW9uLmNoYW5nZSgkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICQubmF2aWdhdGlvbi5jYWxjKCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24uaGFzaC5sZW5ndGggPiAxKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkLm5hdmlnYXRpb24uc2Nyb2xsU2VjdGlvbih3aW5kb3cubG9jYXRpb24uaGFzaCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgMTUwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICQubmF2aWdhdGlvbi5pbml0KHtcbiAgICAgICAgbWVudTogJyNuYXZpZ2F0aW9uJyxcbiAgICAgICAgbGluazogJy5qLW5hdmlnYXRpb24nLFxuICAgICAgICBhbmNob3I6ICctYW5jaG9yJyxcbiAgICAgICAgY3VycmVudENsYXNzOiAnY3VycmVudCdcbiAgICB9KTtcbn0pKGpRdWVyeSk7IiwiOyhmdW5jdGlvbiAoICQsIHdpbmRvdywgZG9jdW1lbnQgKSB7XG5cdFwidXNlIHN0cmljdFwiO1xuXG5cdHZhciB2aWV3cG9ydCA9IDAsXG4gICAgXHR3aGVpZ2h0ID0gJCh3aW5kb3cpLmhlaWdodCgpLFxuICAgIFx0c2Nyb2xsVG9wO1xuXG4gICAgJC5mbi52aWV3cG9ydCA9IGZ1bmN0aW9uICggb3B0aW9ucyApIHtcbiAgICAgICAgb3B0aW9ucyA9ICQuZXh0ZW5kKCB7fSwgJC5mbi52aWV3cG9ydC5vcHRpb25zLCBvcHRpb25zICk7XG5cbiAgICAgICAgJC5mbi52aWV3cG9ydC5vcHRpb25zLml0ZW1zID0gdGhpcztcblxuICAgICAgICBpZiAoISQuZm4udmlld3BvcnQub3B0aW9ucy5lbGVtZW50cy5sZW5ndGgpXG5cdFx0e1xuXHRcdFx0JC5mbi52aWV3cG9ydC5jYWxjdWxhdGUoKTtcblx0XHR9XG5cblx0XHRpZiAoJC5mbi52aWV3cG9ydC5vcHRpb25zLmVsZW1lbnRzLmxlbmd0aClcblx0XHR7XG5cdFx0XHQkLmZuLnZpZXdwb3J0LmFuaW1hdGUoKTtcblx0ICAgIH1cblxuXHQgICAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbigpe1xuXHRcdFx0JC5mbi52aWV3cG9ydC5hbmltYXRlKCk7XG5cdFx0fSk7XG5cblx0ICAgICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKXtcblx0XHRcdCQuZm4udmlld3BvcnQuY2FsY3VsYXRlKCk7XG5cdFx0fSk7XG4gICAgfTtcblxuICAgICQuZm4udmlld3BvcnQub3B0aW9ucyA9IHtcbiAgICAgICAgaXRlbXM6IHt9LFxuICAgICAgICBlbGVtZW50czoge31cbiAgICB9O1xuXG5cdCQuZm4udmlld3BvcnQuY2FsY3VsYXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0JC5mbi52aWV3cG9ydC5vcHRpb25zLmVsZW1lbnRzID0gJC5mbi52aWV3cG9ydC5vcHRpb25zLml0ZW1zLm1hcChmdW5jdGlvbigpe1xuXHRcdFx0aWYgKCQodGhpcykubGVuZ3RoKSB7XG5cdFx0XHRcdHJldHVybiAkKHRoaXMpO1xuXHRcdFx0fVxuICAgICAgICB9KTtcblx0fVxuXG4gICAgJC5mbi52aWV3cG9ydC5hbmltYXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0c2Nyb2xsVG9wID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuXG5cdFx0JC5mbi52aWV3cG9ydC5vcHRpb25zLmVsZW1lbnRzLm1hcChmdW5jdGlvbigpe1xuXHRcdFx0dmlld3BvcnQgPSBzY3JvbGxUb3AgKyB3aGVpZ2h0O1xuXG5cdCAgICAgICAgaWYgKCQodGhpcykub2Zmc2V0KCkudG9wIDw9IHZpZXdwb3J0ICYmICEkKHRoaXMpLmhhc0NsYXNzKCdhY3RpdmUnKSlcblx0ICAgICAgICB7XG5cdCAgICAgICAgXHQkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcblx0ICAgICAgICB9XG5cdCAgICB9KTtcblx0fVxuXG59KSggalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50ICk7XG5cbi8vJCgnLmVmZmVjdGVkJykudmlld3BvcnQoKTsiLCIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICAkLmFwcC5pbml0KCk7XG59KTtcblxuLy8gYmFza2V0LnJlcXVpcmUoXG4vLyAgICAgeyB1cmw6ICdyZXF1aXJlLmpzJyB9LFxuLy8gICAgIHsgdXJsOiAncmVxdWlyZS5jb25maWcuanMnLCBza2lwQ2FjaGU6IHRydWUgfSxcbi8vICAgICB7IHVybDogJ2xpYnMuanMnIH1cbi8vICk7XG5cbi8vIGJhc2tldC5yZXF1aXJlKFxuLy8gICAgIHsgdXJsOiAncmVxdWlyZS5qcycgfSxcbi8vICAgICB7IHVybDogJ3JlcXVpcmUuY29uZmlnLmpzJywgc2tpcENhY2hlOiB0cnVlIH0sXG4vLyAgICAgeyB1cmw6ICdsaWJzLmpzJyB9XG4vLyApO1xuXG4vLyBiYXNrZXRcbi8vICAgICAucmVxdWlyZSh7IHVybDogJ21pc3NpbmcuanMnIH0pXG4vLyAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuLy8gICAgICAgICAvLyBTdWNjZXNzXG4vLyAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4vLyAgICAgICAgIC8vIFRoZXJlIHdhcyBhbiBlcnJvciBmZXRjaGluZyB0aGUgc2NyaXB0XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbi8vICAgICB9KTtcblxuLy8gICAgIGJhc2tldC5yZXF1aXJlKHsgdXJsOiAnanF1ZXJ5LTIuMC4wLm1pbi5qcycsIGtleTogJ2pxdWVyeScgfSk7XG5cbi8vIGJhc2tldC5yZXF1aXJlKHsgdXJsOiAnanF1ZXJ5Lm1pbi5qcycsIGV4cGlyZTogMiB9KVxuLy8gYmFza2V0LnJlcXVpcmUoeyB1cmw6ICdqcXVlcnkubWluLmpzJywgZXhlY3V0ZTogZmFsc2UgfSk7XG5cbi8vIC8vIGZldGNoIGFuZCBjYWNoZSB0aGUgZmlsZVxuLy8gYmFza2V0LnJlcXVpcmUoeyB1cmw6ICdqcXVlcnkubWluLmpzJyB9KTtcbi8vIC8vIGZldGNoIGFuZCBjYWNoZSBhZ2FpblxuLy8gYmFza2V0LnJlcXVpcmUoeyB1cmw6ICdqcXVlcnkubWluLmpzJywgdW5pcXVlOiAxMjMgfSk7XG5cblxuLy8gdmFyIHdoaXRlQ1NTID0gJ2JvZHkgeyBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfSc7XG4vLyB2YXIgYmxhY2tDU1MgPSAnYm9keSB7IGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyB9Jztcbi8vIHZhciBkdXJhdGlvbiA9IDEwMDA7XG4vLyB2YXIgc3RvcHBlZCA9IGZhbHNlO1xuLy8gdmFyIGNzcyA9IG51bGw7XG4vLyB2YXIgaW50ZXJ2YWxJZCA9IG51bGw7XG4vLyBmdW5jdGlvbiBzdGFydChub2RlKSB7XG4vLyAgICAgY3NzID0gY3NzID09PSB3aGl0ZUNTUyA/IGJsYWNrQ1NTIDogd2hpdGVDU1M7XG4vLyAgICAgc3R5bGVzaGVldC5yZXBsYWNlU3R5bGVTaGVldChub2RlLCBjc3MsIGZ1bmN0aW9uIChlcnIsIHN0eWxlKSB7XG4vLyAgICAgICAgIGlmIChlcnIpIHtcbi8vICAgICAgICAgICAgIGFsZXJ0KGVycik7IC8vIEZvciBJRTguIEkgZG9uJ3QgbGlrZSBpdCBidXQgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuLlxuLy8gICAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICAgICAgaWYgKCFzdG9wcGVkKSB7XG4vLyAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4vLyAgICAgICAgICAgICAgICAgICAgIHN0YXJ0KHN0eWxlKTtcbi8vICAgICAgICAgICAgICAgICB9LCBkdXJhdGlvbik7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgIH1cbi8vICAgICB9KTtcbi8vIH1cbi8vIGZ1bmN0aW9uIHN0b3AoKSB7XG4vLyAgICAgc3RvcHBlZCA9IHRydWU7XG4vLyB9XG4vLyBzdGFydCgpO1xuXG4vLyBzdHlsZXNoZWV0Lmlnbm9yZUtCMjYyMTYxID0gZmFsc2U7IC8vIFRvZ2dsZSB0aGlzIGZvciBkaWZmZXJlbnQgcmVzdWx0cy5cbi8vICAgICAgICAgdmFyIFRPT19NQU5ZX1NUWUxFUyA9IDEwMDtcbi8vICAgICAgICAgdmFyIGNzcyA9ICdib2R5IHsgYmFja2dyb3VuZC1jb2xvcjogZ3JleSB9Jztcbi8vICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IFtdO1xuLy8gICAgICAgICB2YXIgeDtcbi8vICAgICAgICAgZm9yICh4ID0gMDsgeCA8IFRPT19NQU5ZX1NUWUxFUzsgeCsrKSB7XG4vLyAgICAgICAgICAgICBjYWxsYmFja3MucHVzaChhc3luYy5hcHBseShzdHlsZXNoZWV0LmFwcGVuZFN0eWxlU2hlZXQsIGNzcykpO1xuLy8gICAgICAgICB9XG4vLyAgICAgICAgIGFzeW5jLnBhcmFsbGVsKGNhbGxiYWNrcywgZnVuY3Rpb24oZXJyLCBzdHlsZXMpIHtcbi8vICAgICAgICAgICAgIGlmIChlcnIpIHtcbi8vICAgICAgICAgICAgICAgICBhbGVydChlcnIpO1xuLy8gICAgICAgICAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgICAgICAgICBhbGVydCgnU3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgJyArIHN0eWxlcy5sZW5ndGgpO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICB9KTtcbiJdfQ==
