
// __app.js

;( function( $ ) {
	"use strict";

	window.body = $('body');
	window._this = null;

	$.app = {
		
		initSandwich: function()
		{
			this.sandwich.init({
				keyHooks: !0,
				selector: '.js-sandwich-menu',
				wrapper: '.layout-wrapper',
				overlay: '#menu-overlay'
			});
		},

		initSelectTrigger: function()
		{
			body.on('select.close', function(e, select){
				if ($(select).closest('.form__group').length)
				{
					var index = 1, group = $(select).closest('.form__group');

					group.css('z-index', 1);

					if (group.closest('.form__group_items').length)
					{
						group = group.closest('.form__group_items');

						group.css('z-index', 1);
					}
				}
			});

			body.on('select.open', function(e, select){
				if ($(select).closest('.form__group').length)
				{
					var group = $(select).closest('.form__group');

					group.css('z-index', 10000);

					if (group.closest('.form__group_items').length)
					{
						group = group.closest('.form__group_items');

						group.css('z-index', 10000);
					}
				}
			});

			body.on('change', '.js-form-select', function(e){
				if ($(this).closest('.error').length)
				{
					$(this).closest('.error').removeClass('error');
				}
			});
		},

		initSelect: function(group)
		{
			if (typeof(group) == 'undefined')
			{
				$('select').not('.is-system').selectbox();
			}
			else
			{
				group.find('select').not('.is-system').selectbox();
			}

			this.initSelectTrigger();
		},

		initMask: function()
		{
			$(".js-date-watcher").mask("99/99/9999");
			$(".js-phone-watcher").mask("+ 7 (999) 999-99-99");
			$(".js-cartnumber-watcher").mask("999-999-999");
		},
		
		initPopup: function()
		{
			$.popup.init('.js-open-popup', {
				cssPosition: false,
				wrapper: '.layout-wrapper'
			});
		},
		
		initMagnific: function()
		{ 
			if ($('.zoom-group').length)
			{
				$('.zoom-group').find('.zoom-list').each(function(){
					$(this).magnificPopup({
						delegate: '.zoom',
						type: 'image',
				 		preloader: true,
						gallery: {
							enabled: true,
							navigateByImgClick: true,
							tCounter: '%curr% of %total%'
						},
						zoom: {
							enabled: true,
							duration: 300,
							easing: 'ease-in-out',
							opener: function(openerElement) {
								return openerElement.is('img') ? openerElement : openerElement.find('img');
							}
						},
					 	closeOnContentClick: true
					});
				});
			}
			else
			{
				$('.zoom').magnificPopup({
				 	type:'image',
				 	preloader: true,
					gallery: {
						enabled: true
					},
					zoom: {
						enabled: true,
						duration: 300,
						easing: 'ease-in-out',
						opener: function(openerElement) {
							return openerElement.is('img') ? openerElement : openerElement.find('img');
						}
					},
				 	closeOnContentClick: true
				});
			}
		},

		slickCarousel: function()
		{
			if ($('.js-carousel').length && $('.js-carousel').find('.slick-slide').length)
			{
				var count = 4, classname = 'carousel';

				$('.js-carousel').each(function(){
					count = 4;
					classname = 'carousel';

					if ($(this).data('viewcount'))
					{
						count = parseInt($(this).data('viewcount'));
					}

					if ($(this).data('classname'))
					{
						classname = $(this).data('classname');
					}

					$(this).slick({
						infinite: true,
						dots: false,
						draggable: true,
						speed: 170,
						slidesToShow: count,
						slidesToScroll: 1,
						prevArrow: '<button type="button" class="'+classname+'__navigation '+classname+'__navigation_prev slick-prev"></button>',
						nextArrow: '<button type="button" class="'+classname+'__navigation '+classname+'__navigation_next slick-next"></button>',
						responsive: [
							{
								breakpoint: 1024,
								settings: {
									slidesToShow: 3,
									slidesToScroll: 3,
									infinite: true,
									dots: true
								}
							},
							{
								breakpoint: 600,
								settings: {
									slidesToShow: 2,
									slidesToScroll: 2
								}
							},
							{
								breakpoint: 480,
								settings: {
									slidesToShow: 1,
									slidesToScroll: 1
								}
							}
						]
					});
				});
			}
		},

		slickSlider: function()
		{
			if ($('.js-slider').length && $('.js-slider').find('.slick-slide').length)
			{
				var count = 1, classname = 'slider', $slider = '', width = $(window).width(), options = {};

				$('.js-slider').each(function(){
					count = 1;
					classname = 'slider';

					options = {
						infinite: !0,
						dots: !1,
						draggable: !1,
						speed: 300,
						fade: !1,
						autoplay: !0,
						autoplaySpeed: 4500,
						pauseOnHover: !1,
						useTransform: !1,
						variableWidth: !0,
						cssEase: 'ease'
					};
					
					$slider = $(this);

					if ($slider.hasClass('js-slider-calc'))
					{
					 	$slider.find('.slick-slide').css({
					 		'width': width + 'px'
					 	});
					}

					if (!$slider.hasClass('js-disable-navigation'))
					{
						options['prevArrow'] = '<button type="button" class="slider__navigation slider__navigation_prev slick-prev"></button>';
						options['nextArrow'] = '<button type="button" class="slider__navigation slider__navigation_next slick-next"></button>';
					}
					else
					{
						options['arrows'] = !1;
					}

					$slider.slick(options);
				});
			}
		},

		disableHover: function()
		{
			var timer;
			window.addEventListener('scroll', function() {
				clearTimeout(timer);
				
				if(!body.hasClass('disable-hover')) {
					body.addClass('disable-hover');
				}

				timer = setTimeout(function(){
					body.removeClass('disable-hover');
				},500);
			}, false);
		},

		initTooltip: function()
		{
			var tooltip, item;

			body.on('click', function(e){
				if (!$(e.target).hasClass('tooltip') && !$(e.target).hasClass('js-tooltip') && $('.tooltip.show').length)
				{
					$('.tooltip.show').removeClass('animate');

					setTimeout(function(){
						$('.tooltip.show').removeClass('show');
					}, 300);
				}
			});

			body.on('click', '.js-tooltip', function(e){
				e.preventDefault();
				
				item = $(this);

				if ((item.data('tooltip') || item.find('.tooltip').length) && !$(e.target).hasClass('tooltip'))
				{
					tooltip = item.data('tooltip');

					if (!item.find('.tooltip').length)
					{
						var span = document.createElement('span');
						span.className = 'tooltip';
						span.innerHTML = tooltip;

						item.append(span);
					}

					if (item.find('.tooltip').hasClass('show'))
					{
						item.find('.tooltip').removeClass('animate');

						setTimeout(function(){
							item.find('.tooltip').removeClass('show');
						}, 200);
					}
					else
					{
						item.find('.tooltip').addClass('show');

						setTimeout(function(){
							item.find('.tooltip').addClass('animate');
						}, 10);
					}
				}
			});
		},

		toggle: function()
		{
			var selector, block, target, button;

			$('.js-toggle-trigger').each(function(){
				if ($($(this).data('toggle')).length)
				{
					selector = $(this).data('toggle');
					button = $(this);
					block = $(selector);

					body.on('click', function(e){
						target = $(e.target);

						if (!target.closest(selector).length && !target.closest('.js-toggle-trigger').length && block.hasClass('active'))
						{
							button.removeClass('animate');
							block.removeClass('transform');

							setTimeout(function(){
								block.removeClass('active');
							}, 135);
						}
					});		
				}
			});

			body.on('click', '.js-toggle-trigger', function(e){
				e.preventDefault();

				if ($(this).data('toggle'))
				{
					block = $($(this).data('toggle'));
					button = $(this);

					if (block.length)
					{
						if (!block.hasClass('active'))
						{
							button.addClass('animate');
							block.addClass('active');

							setTimeout(function(){
								block.addClass('transform');
							}, 5);
						}
						else
						{
							button.removeClass('animate');
							block.removeClass('transform');

							setTimeout(function(){
								block.removeClass('active');
							}, 135);
						}
					}
					
				}

			});
		},
		
		findJumpElement: function(hash)
		{
			hash = hash.substr(1);

			if ($('a[name="' + hash + '"]').length)
			{
				return $('a[name="' +hash+ '"]').eq(0);
			}
			
			if ($('#' + hash).length)
			{
				return $('#' +hash).eq(0);
			}

			if ($('.screen[data-screen="' + hash + '"]').length)
			{
				return $('.screen[data-screen="' + hash + '"]').eq(0);
			}

			return null;
		},

		hashJump: function()
		{
			_this = this;

			var $jumpto = null;

			if (window.location.hash)
			{
				var hash = window.location.hash;

				$jumpto = _this.findJumpElement(hash + '-anchor');

				if ($jumpto !== null)
				{
					$scrollWrapper.stop().animate({ scrollTop: ($jumpto.offset().top + 25) + 'px' }, 'fast');
				}
			}

			body.on('click', '.j-jumpto', function(e){

				if ($(this).data('anchor'))
				{
					$jumpto = _this.findJumpElement($(this).data('anchor'));
				}
				else if($(this).attr('href'))
				{
					$jumpto = _this.findJumpElement($(this).attr('href'));
				}
				
				if ($jumpto !== null)
				{
					$scrollWrapper.stop().animate({ scrollTop: $jumpto.offset().top + 'px' }, 'medium');
					
					if ($(this).hasClass('j-navigation'))
					{
						$('#navigation').find('.current').removeClass('current');
						$(this).addClass('current');
					}
				}
			});
		},

		updateImage: function()
		{
			body.on('click', '.js-update-image', function(e){
				e.preventDefault();
				$(this).find('img').attr('src', $(this).find('img').attr('src').split('?')[0] + '?u=' + Math.random());
			});
		},

		zoomit: function()
		{
			var wrapper, holder, image;

			body.on('click', '.js-zoom-image', function(e){
				
				e.preventDefault();

				image = $(this).attr('href');

				if ($(this).closest('.js-zoom-wrapper').length)
				{
					wrapper = $(this).closest('.js-zoom-wrapper');
					
					if (wrapper.find('.js-zoom-holder').length)
					{
						holder = wrapper.find('.js-zoom-holder');

						holder.html('');

						wrapper.find('.current').removeClass('current');


						holder.html('<img src="' + image + '" alt="">');

						$(this).addClass('current');
					}
				}

				return !1;
			});
		},

		suggestionsInit: function()
		{
			var api_key = '5ac2fbf1f640b75b78f5d4214ff005ff5303eac8', input = null;

			if ($('.js-suggestions').length)
			{
				$('.js-suggestions').each(function(){
					input = $(this);
					
					if (input.data('type'))
					{
						input.suggestions({
						    serviceUrl: "https://dadata.ru/api/v2",
						    token: api_key,
						    type: input.data('type'),
						    count: 5,
						    onSelect: function(suggestion) {
						        console.log(suggestion);
						    }
						});
					}
				});
			}
		},

		initForm: function()
		{
			body.on('focus', 'input.error', function(){
				$(this).removeClass('error');
			});

			$(".integer").on('keypress', function (e) {
				if ([0, 8, 13, 38, 40].indexOf( e.which ) < 0 && (e.which < 48 || e.which > 57))
				{
					return !1;
				}
			});

			$(".ignore-paste").on('keydown', function (e){
				if ((e.metaKey || e.ctrlKey) && e.keyCode == 86)
				{
					return !1;
				}
			});

			$(".float").on('keypress', function (e) {
				if ( [0, 8, 13, 38, 40, 44, 46].indexOf( e.which ) < 0 && ( e.which < 48 || e.which > 57 ) )
				{
					return !1;
				}
			});
		},

		initAccordion: function()
		{
			var $accordion_item = null;

			body.on('click', '.j-toggle-accordion', function(e){
				e.preventDefault();
				
				if ($(this).hasClass('accordion__list__link')) {
					$accordion_item = $(this).closest('.accordion__list__item');
				}
				else {
					$accordion_item = $(this).closest('.j-toggle-item');	
				}

				$accordion_item.find('.j-toggle-list').eq(0).toggleClass('open');
			
				$(this).toggleClass('current');
			});
		},

		initSidebar: function()
		{
			var $content = $('#sidebar').find('.j-sidebar-content');

			$('body').on('click', '.j-sidebar-trigger', function(){
				if ($content.hasClass('animate'))
				{
					$(this).removeClass('animate');
					$content.removeClass('animate');
					
					setTimeout(function(){
						$content.removeClass('active');
					}, 250);
				}
				else
				{
					$(this).addClass('animate');
					$content.addClass('active');

					setTimeout(function(){
						$content.addClass('animate');
					}, 5);
				}
			});
		},

		init: function()
		{
			this.disableHover();

			this.initPopup();
			this.initMask();
			this.slickSlider();
			this.initSandwich();
			this.initAccordion();
			this.initSidebar();
			this.initMagnific();
		}

	};

})( jQuery );


// _app.ajaxform.js

;( function( $ ) {
	"use strict";

	$.app = $.app || {};

	var $body = $('body'), _this = null;

	$.app.ajaxForm = {

		config: {
			form_class: '.form-ajax',
			form_reset: 'form-reset',
			form_button: '.j-form-button',
			link_class: '.js-request-link',
			error_class: 'error',
			error_message: 'form__error-message',
			form_label: '.form__wrapper',
			checkbox_label: 'checkbox__label'
		},

		callback_stack: {},

		extend: function(config)
		{
			_this = this;

			if (typeof config !== 'undefined')
			{
				var x;
				for (x in config)
				{
					if (typeof _this.config[x] !== 'undefined')
						_this.config[x] = config[x];
				}
			}
		},

		default_handler: function($form, response)
		{
			_this = this;

			if (response.status)
			{
				if (response.hasOwnProperty('redirect_url'))
				{
					window.location.href = response.redirect_url;
				}
			}
			else if (response.errors)
			{
				_this.validation($form, response.errors);
			}
			
			if (response.hasOwnProperty('message'))
			{
				$.popup.message(response.title, response.message);
			}

		},

		upload: function()
		{
			_this = this;

			$body.on('submit', '.form-file-upload', function(e) {
				return AIM.submit(this, {
					onStart: function()
					{

					},
					onComplete: function(result)
					{
						if (typeof result === 'object' && result.status === true && result.hasOwnProperty('photo_url'))
						{

						}
					}
				});
			});
			
			$(document).on('change', '.upload_button_onchange', function(){
				if ($(this).closest('.upload_button').find('.upload_button_field').length > 0)
				{
					$(this).closest('.upload_button').find('.upload_button_field').html($(this).val());
				}
			});
		},

		validation: function($form, errors)
		{
			_this = this;

			$form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
			$form.find('.' + _this.config.error_message).remove();
			
			var fieldName, field;

			setTimeout(function() {
				if (errors)
				{
					for(fieldName in errors)
					{
						if ($form.find('input[name="'+fieldName+'"]').length > 0)
						{
							field = $form.find('input[name="'+fieldName+'"]');
						}

						if ($form.find('select[name="'+fieldName+'"]').length > 0)
						{
							field = $form.find('select[name="'+fieldName+'"]');
						}

						if ($form.find('textarea[name="'+fieldName+'"]').length > 0)
						{
							field = $form.find('textarea[name="'+fieldName+'"]');
						}

						if (field.closest('.' + _this.config.checkbox_label).length > 0)
						{
							field = field.closest('.' + _this.config.checkbox_label);
						}

						if (typeof field !== 'undefined')
						{
							field.addClass(_this.config.error_class);
							field.closest(_this.config.form_label).append('<div class="' + _this.config.error_message + '">' + errors[fieldName] + '</div>');
						}
					}
				}
			}, 10);
		},

		send: function(action, method, data, cb, err)
		{
			if (typeof cb !== 'function')
			{
				cb = function() {};
			}

			if (typeof err !== 'function')
			{
				err = function() {};
			}

			try {
			
				$.ajax({
					url: action,
					type: method,
					data: data,
					contentType: false,
					processData: method.toLowerCase() == 'get',
					success: cb,
					error: err,
					dataType: 'JSON'
				});

			} catch(e){}
		},

		initLink: function()
		{
			_this = this;

			$body.on('click', _this.config.link_class, function(e) {
				e.preventDefault ? e.preventDefault() : e.returnValue = false;
				
				var $link = $(this);

				if ($link.data('is-busy')) {
					return;
				}

				$link.data('is-busy', true);

				var action = ($(this).attr('href')) || $(this).data('action'),
					method = ($(this).data('method')) || 'get',
					data = {};

				_this.send(
					action,
					method,
					data,
					function(response)
					{
						if ($link.data('callback') && _this.callback_stack.hasOwnProperty($link.data('callback')))
						{
							_this.callback_stack[$link.data('callback')]($link, response);
						}
						else
						{
							_this.default_handler($link, response);
						}

						if (response.status === true)
						{

						}

						$link.data('is-busy', false);
					},
					function(response)
					{
						_this.default_handler($link, response);
						$link.data('is-busy', false);
					}
				);
			});
		},

		initForm: function()
		{
			_this = this;

			$body.on('submit', _this.config.form_class, function(e) {
				e.preventDefault ? e.preventDefault() : e.returnValue = false;

				var $form 	= $(this),
					action	= $form.attr('action'),
					method	= ($form.attr('method') || 'post'),
					data 	= !!window.FormData ? new FormData($form[0]) : $form.serialize();

				if ($form.data('is-busy')) {
					return;
				}

				$form.data('is-busy', true);

				if ($form.find(_this.config.form_button).length)
				{
					var $button = $form.find(_this.config.form_button);
				}

				if (typeof $button !== 'undefined')
				{
					if ($button.data('loading'))
					{
						$button.data('original', $button.text());
						$button.text($button.data('loading'));
					}

					$button.addClass('preload');
				}

				if ($form.data('precallback') && _this.callback_stack.hasOwnProperty($form.data('precallback'))) {
					if(!_this.callback_stack[$form.data('precallback')]($form))
					{
						return false;
					}
				}

				_this.send(
					action,
					method,
					data,
					function(response)
					{
						if ($form.data('callback') && _this.callback_stack.hasOwnProperty($form.data('callback')))
						{
							_this.callback_stack[$form.data('callback')]($form, response);
						}
						else
						{
							_this.default_handler($form, response);
						}

						if ($form.hasClass(_this.config.form_reset))
						{
							$form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
							$form.get(0).reset();
						}

						if (response.status === true)
						{
							
						}

						if (typeof $button !== 'undefined')
						{
							if ($button.data('original'))
							{
								$button.text($button.data('original'));
							}

							$button.removeClass('preload');
						}
						
						$form.data('is-busy', false);
					},
					function(response)
					{
						_this.default_handler($form, response);
						$form.data('is-busy', false);
					}
				);
			});
		},

		initValidate: function()
		{
			$body.on('focus', '.form__input.error, .form__textarea.error', function(){
				$(this).removeClass('error');
			});
		},

		init: function(config)
		{
			if (typeof config !== 'undefined')
			{
				this.extend(config);
			}
			
			this.initForm();
			this.initLink();
			this.initValidate();
		}

	};

})( jQuery );


// _app.sandwich.js

;(function ($) {
	"use strict";

	$.app = $.app || {};

	var _this;

	$.app.sandwich = {

		config: {
			keyHooks: !1,
			selector: '.js-sandwich-menu',
			wrapper: '.layout-wrapper',
			overlay: '.overlay'
		},

		extend: function(config)
		{
			_this = this;

			if (typeof config !== 'undefined')
			{
				var x;
				for (x in config)
				{
					if (typeof _this.config[x] !== 'undefined')
						_this.config[x] = config[x];
				}
			}
		},

		isOpen: function()
		{
			return body.hasClass('page-visible');
		},

		hide: function()
		{
			body.removeClass('page-open');

			setTimeout(function(){
				body.removeClass('page-visible');
			}, 10);

			$(this.config.overlay).css({
				'visibility': 'hidden'
			});
		},

		toggle: function()
		{
			if (body.hasClass('page-visible'))
			{
				setTimeout(function(){
					body.removeClass('page-visible');
				}, 10);
			}
			else
			{
				setTimeout(function(){
					body.addClass('page-visible');
				}, 10);
			}

			body.toggleClass('page-open');

			var visibility = 'visible';

			if (!body.hasClass('page-open'))
			{
				visibility = 'hidden'
			}
			
			$(_this.config.overlay).css({
				'visibility': visibility
			});
		},

		sandwichTrigger: function()
		{
			_this = this;

			if (_this.config.keyHooks)
			{
				body.on('keydown', function(e) {
					if(e.keyCode == 27 && _this.isOpen())
					{
						_this.toggle();
					}
				});
			};

			body.on('click', _this.config.selector, function(e){
				e.preventDefault ? e.preventDefault() : e.returnValue = false;
				_this.toggle();
			});
		},

		overlayTrigger: function()
		{
			_this = this;

			body.on('click', _this.config.overlay, function(e){
				_this.hide();
			});
		},

		init: function(config)
		{
			this.extend(config);
			
			this.sandwichTrigger();
			this.overlayTrigger();
		}

	};

})(jQuery);


// _app.stick.js

;(function ($) {
	"use strict";

	$.app = $.app || {};

	var body = $('body'), _this, _scrollTop, _timeout;

	$.app.stick = {

		config: {
			delay: 10,
			element: '.js-stick'
		},

		cache: [],

		calc: function()
		{
			_this = this;

			if ($(_this.config.element).length)
			{
				$(_this.config.element).map(function(index) {
					$(this).addClass('js-stick-' + index);
					_this.cache[index] = $(this).offset().top;
				});
			}
		},

		check: function()
		{
			_this = this;

			_scrollTop = $(window).scrollTop();

			var x, stick;

			for(x in _this.cache)
			{
				stick = $('.js-stick-' + x);

				if (_scrollTop >= _this.cache[x])
				{
					if (!stick.hasClass('sticked'))
					{
						stick.addClass('sticked');
					}
				}
				else
				{
					if (stick.hasClass('sticked'))
					{
						stick.removeClass('sticked');
					}
				}
			}
		},

		initScroll: function()
		{
			_this = this;

			$(window).on('scroll', function(e){

				clearTimeout(_timeout);

				_timeout = setTimeout(function() {

					_this.check();

				}, _this.config.delay);
				
			});
		},

		init: function()
		{
			this.calc();
			this.check();
			
			this.initScroll();
		}

	};

})(jQuery);


// _app.tabs.js

;(function ($) {
    "use strict";

    $.app = $.app || {};

    $.app.tabs = {

        config: {
            mouseevent:   'click',
            attribute:    'href',
            animation:    false,
            autorotate:   false,
            pauseonhover: true,
            delay:        2000,
            active:       1,
            container:    false,
            controls:     {
                prev: '.prev',
                next: '.next'
            }
        },

        extend: function(config)
        {
            _this = this;

            if (typeof config !== 'undefined')
            {
                var x;
                for (x in config)
                {
                    if (typeof _this.config[x] !== 'undefined')
                        _this.config[x] = config[x];
                }
            }
        },

        init: function(config)
        {
            this.extend(config);
        }

    };

})(jQuery);


// _fns.js

var tools = {
    isString: function (obj) {
        return typeof obj === 'string';
    },
    isObject: function (obj) {
        return typeof obj === 'object';
    },
    isNumber: function (obj) {
        return typeof obj === 'number';
    },
    isUndefined: function (value) {
        return typeof value === 'undefined';
    },
    isDefined: function (value) {
        return typeof value !== 'undefined';
    },
    isNull: function (value) {
        return value == null;
    }
};

// event.type должен быть keypress
function getChar(event)
{
    if (event.which == null) { // IE
        if (event.keyCode < 32) return null; // спец. символ
        return String.fromCharCode(event.keyCode)
    }

    if (event.which != 0 && event.charCode != 0) { // все кроме IE
        if (event.which < 32) return null; // спец. символ
        return String.fromCharCode(event.which); // остальные
    }

    return null; // спец. символ
}

function on(elm, events, handler)
{
   if (elm) {
       events.split(' ').forEach(function (event) {
           elm.addEventListener(event, handler);
       });
   }
}

function scrollToElement(element)
{
    if ($(element).length)
    {
        var block;

        if ($(element).closest('.popup').length)
        {
            block = $(element).closest('.popup');
        }
        else {
            block = $(element);
        }

        block.stop().animate({ scrollTop: $(element).position().top }, 'fast');
    }
}

function formatMoney(n, c, d, t)
{
    var c = isNaN(c = Math.abs(c)) ? 2 : c, 
    d = d == undefined ? '.' : d, 
    t = t == undefined ? ',' : t, 
    s = n < 0 ? '-' : '', 
    i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + '',
    j = (j = i.length) > 3 ? j % 3 : 0;
    return s + (j ? i.substr(0, j) + t : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, '$1' + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');
}

function getMax(arr)
{
    return Math.max.apply(Math, arr);
}

function getMin(arr)
{
    return Math.min.apply(Math, arr);
}

function is_null(x)
{
	return x == null;
}

function is_undefined(x)
{
	return typeof(x) == 'undefined';
}

function is_touch_device()
{
    return ("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch || 'onmsgesturechange' in window);
}

function declOfNum(number, titles) {  
    cases = [2, 0, 1, 1, 1, 2];  
    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  
}
// declOfNum(count, ['найдена', 'найдено', 'найдены']);

var shuffle = function( array ) {
	return array.sort( function() {
		return Math.random() - 0.5;
	} );
};

function updateCaptcha(captcha, ev)
{
    ev.preventDefault();

    if ($(captcha).length)
    {
        $(captcha).attr('src', $(captcha).attr('src').split( '?' )[0] + '?v=' + Math.random());
    }

    return !1;
}

// Возвращает функцию, которая не будет срабатывать, пока продолжает вызываться.
// Она сработает только один раз через N миллисекунд после последнего вызова.
// Если ей передан аргумент `immediate`, то она будет вызвана один раз сразу после
// первого запуска.
function debounce(func, wait, immediate) {
    var timeout;
    return function() {
        var context = this, args = arguments;
        var later = function() {
            timeout = null;
            if (!immediate) func.apply(context, args);
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
    };
};

// Использование
// var myEfficientFn = debounce(function() {
// All the taxing stuff you do
// }, 250);
// window.addEventListener('resize', myEfficientFn);


function once(fn, context) { 
    var result;

    return function() { 
        if(fn) {
            result = fn.apply(context || this, arguments);
            fn = null;
        }

        return result;
    };
}

// // Пример использования
// var canOnlyFireOnce = once(function() {
//     console.log('Запущено!');
// });

// canOnlyFireOnce(); // "Запущено!"
// canOnlyFireOnce(); // Не запущено


var getAbsoluteUrl = (function() {
    var a;

    return function(url) {
        if(!a) a = document.createElement('a');
        a.href = url;

        return a.href;
    };
})();

// Пример использования
// getAbsoluteUrl('/something');


/**
 * @param {string} s1 Исходная строка
 * @param {string} s2 Сравниваемая строка
 * @param {object} [costs] Веса операций { [replace], [replaceCase], [insert], [remove] }
 * @return {number} Расстояние Левенштейна
 */
function levenshtein(s1, s2, costs) {
    var i, j, l1, l2, flip, ch, chl, ii, ii2, cost, cutHalf;
    l1 = s1.length;
    l2 = s2.length;

    costs = costs || {};
    var cr = costs.replace || 1;
    var cri = costs.replaceCase || costs.replace || 1;
    var ci = costs.insert || 1;
    var cd = costs.remove || 1;

    cutHalf = flip = Math.max(l1, l2);

    var minCost = Math.min(cd, ci, cr);
    var minD = Math.max(minCost, (l1 - l2) * cd);
    var minI = Math.max(minCost, (l2 - l1) * ci);
    var buf = new Array((cutHalf * 2) - 1);

    for (i = 0; i <= l2; ++i) {
        buf[i] = i * minD;
    }

    for (i = 0; i < l1; ++i, flip = cutHalf - flip) {
        ch = s1[i];
        chl = ch.toLowerCase();

        buf[flip] = (i + 1) * minI;

        ii = flip;
        ii2 = cutHalf - flip;

        for (j = 0; j < l2; ++j, ++ii, ++ii2) {
            cost = (ch === s2[j] ? 0 : (chl === s2[j].toLowerCase()) ? cri : cr);
            buf[ii + 1] = Math.min(buf[ii2 + 1] + cd, buf[ii] + ci, buf[ii2] + cost);
        }
    }
    return buf[l2 + cutHalf - flip];
}
	
// function doOnOrientationChange()
// {
// 	switch(window.orientation) 
// 	{  
// 		case -90:
// 		case 90:
// 		alert('landscape');
// 		break; 
// 		default:
// 		alert('portrait');
// 		break; 
// 	}
// }

// window.addEventListener('orientationchange', doOnOrientationChange);

// doOnOrientationChange();


// Smoothly Scroll to page anchors
// var jump = function (e) {
// // Stop the "hard" jump.
// e.preventDefault();
// //Get the target
// var target = $(this).attr("href");
// // Use animated scrolling.  The .stop() prevents scroll queue.
// $('html,body').stop().animate({
//   // Find top-position of target-element and set it as scroll target.
//   scrollTop: $(target).offset().top
//   // Animation Delay:
//   }, 500, function () {
//     // Attach the hash (#jumptarget) to the page url.
//     location.hash = target;
//   });
// }

// // Instantiate this as follows in your document.ready();
// //$(document).ready(function () {
// //$('a[href*=#]').bind("click", jump);
// //return false;
// //});


// _google-map.js

function googleMap()
{
	var arr = {
		'moscow': {
			city: 'г. Москва',
			title: 'Москва',
			street: 'Верхняя Масловка, д. 20, стр. 1.',
			phone: '(495) 645-83-54',
			email: 'info@itsntk.ru',
			coords: [ 55.795316,37.562272 ]
		},
		'krasnodar': {
			city: 'г. Краснодар',
			title: 'Краснодар',
			street: 'ул. Дальняя, 39/3',
			phone: '(861) 278-98-34',
			email: 'info@itsntk.ru',
			coords: [ 45.060932,38.964575 ]
		}
	};

	var mapOptions = {
		zoom: 13,
		zoomControl: !0,
		zoomControlOptions: {
			style: google.maps.ZoomControlStyle.LARGE,
			position: google.maps.ControlPosition.LEFT_TOP
		},
		panControl: !1,
		panControlOptions: {
			position: google.maps.ControlPosition.LEFT_TOP
		},
		scrollwheel: !1,
		navigationControl: !1,
		mapTypeControl: !1,
		scaleControl: !0,
		draggable: !0,
		disableDoubleClickZoom: !1,
		center: new google.maps.LatLng(arr.krasnodar.coords[0], arr.krasnodar.coords[1])
	};

	var map = new google.maps.Map(document.getElementById('map-conteiner'), mapOptions);

	function addMarker( ar, map )
	{
		var contentString = [
			'<div class="map-content">',
				'<h2 class="firstHeading">'+ ar['title'] + '</h2>',
				'<div class="map-bodyContent">',
					'<p>' + ar['city'] + '</p>',
					'<p>' + ar['street'] + '</p>',
					'<p><span>Телефон:</span>' + ar['phone'] + '</p>',
					'<p><span>Email:</span>' + ar['email'] + '</p>',
				'</div>',
			'</div>'
		].join('');

		var infowindow = new google.maps.InfoWindow({
			content: contentString,
			disableAutoPan: true,
			maxWidth: 500
		});

		var image = {
			url: './images/map-marker.png',
			size: new google.maps.Size(18, 25),
			origin: new google.maps.Point(0, 0),
			scaledSize: new google.maps.Size(18, 25),
			anchor: new google.maps.Point(18, 25)
		};

		var marker = new google.maps.Marker({
			position: new google.maps.LatLng( ar['coords'][0], ar['coords'][1] ),
			map: map,
			icon: image,
			flat: true,
			title: ar['title']
		});

		google.maps.event.addListener(marker, 'click', function() {
			if(infowindow)
			{
				infowindow.close();
			}

			infowindow.open(map, marker);
		});
	}
	
	for (var i in arr)
	{
		addMarker(arr[i], map);
	}

	$('body').on('click', '.js-toggle-class', function(e){
		var wrapper = $(this).closest('.js-toggle-wrapper'), city = '';

		if ($(this).data('city'))
		{
			city = $(this).data('city');
			map.setZoom(13);
			map.setCenter({lat: arr[city].coords[0], lng: arr[city].coords[1] });
		}
	});
}


// _navigation.js

(function($) {
    "use strict";

    $.navigation = {
        options:
        {
            menu: '',
            link: '',
            anchor: '',
            currentClass: '',
            menuHeight: 0,
            lastId: '',
            scrollItems: [],
            menuItems: [],
            menuPosition: 0
        },

        change: function(scrollTop)
        {
            scrollTop += $.navigation.options.menuHeight;
            
            var cur = $.navigation.options.scrollItems.map(function(){
                if ($(this).offset().top < scrollTop)
                {
                    return this;
                }
            });
            
            cur = cur[cur.length-1];
            var id = cur && cur.length ? cur[0].id : "";
            
            if ($.navigation.options.lastId !== id)
            {
                var section = id.replace($.navigation.options.anchor, ''),
                    $item = $.navigation.options.menuItems.filter('[href="#'+section+'"]');

                $.navigation.options.lastId = id;
                $.navigation.options.menuItems.removeClass($.navigation.options.currentClass);
                $item.addClass($.navigation.options.currentClass);

                location.hash = section;
            }
        },

        calc: function()
        {
            var $item;

            $.navigation.options.scrollItems = $.navigation.options.menuItems.map(function(){
                $item = $(this.hash + $.navigation.options.anchor);
                
                if ($item.length)
                {
                    return $item;
                }
            });
        },

        scrollSection: function(hash, animate)
        {
            hash = hash + $.navigation.options.anchor;
            
            var $target = $(hash);

            if ($target.length)
            {
                var top = $target.offset().top - 15;
                
                if (animate) {
                    $('html,body').stop().animate({ 'scrollTop': top }, 'fast', 'easeInOutCirc');
                }
                else {
                    $('html,body').scrollTop(top);
                }
            }
        },

        init: function(options)
        {
            $.navigation.options = $.extend(options);
            
            var $menu = $($.navigation.options.menu);

            if ($menu.length)
            {
                $.navigation.options.menuHeight = $menu.outerHeight();
               
                $.navigation.options.menuItems = $($.navigation.options.link);
                $.navigation.options.menuPosition = $menu.position().top;
                 
                $.navigation.calc();
    
                $.navigation.options.menuItems.on('click', function(e) {
                    $.navigation.scrollSection(this.hash, true);
                });
        
                $.navigation.change($(document).scrollTop());

                $(window).scroll(function(){
                    $.navigation.change($(document).scrollTop());
                });

                $(window).resize(function(){
                    $.navigation.calc();
                });

                setTimeout(function(){
                    if (window.location.hash.length > 1)
                    {
                        $.navigation.scrollSection(window.location.hash, false);
                    }
                }, 150);
            }
        }
    }

    $.navigation.init({
        menu: '#navigation',
        link: '.j-navigation',
        anchor: '-anchor',
        currentClass: 'current'
    });
})(jQuery);


// _viewport.js

;(function ( $, window, document ) {
	"use strict";

	var viewport = 0,
    	wheight = $(window).height(),
    	scrollTop;

    $.fn.viewport = function ( options ) {
        options = $.extend( {}, $.fn.viewport.options, options );

        $.fn.viewport.options.items = this;

        if (!$.fn.viewport.options.elements.length)
		{
			$.fn.viewport.calculate();
		}

		if ($.fn.viewport.options.elements.length)
		{
			$.fn.viewport.animate();
	    }

	    $(window).scroll(function(){
			$.fn.viewport.animate();
		});

	    $(window).resize(function(){
			$.fn.viewport.calculate();
		});
    };

    $.fn.viewport.options = {
        items: {},
        elements: {}
    };

	$.fn.viewport.calculate = function() {
		$.fn.viewport.options.elements = $.fn.viewport.options.items.map(function(){
			if ($(this).length) {
				return $(this);
			}
        });
	}

    $.fn.viewport.animate = function() {
		scrollTop = $(window).scrollTop();

		$.fn.viewport.options.elements.map(function(){
			viewport = scrollTop + wheight;

	        if ($(this).offset().top <= viewport && !$(this).hasClass('active'))
	        {
	        	$(this).addClass('active');
	        }
	    });
	}

})( jQuery, window, document );

//$('.effected').viewport();


// init.js

$(document).ready(function() {
    $.app.init();
});

// basket.require(
//     { url: 'require.js' },
//     { url: 'require.config.js', skipCache: true },
//     { url: 'libs.js' }
// );

// basket.require(
//     { url: 'require.js' },
//     { url: 'require.config.js', skipCache: true },
//     { url: 'libs.js' }
// );

// basket
//     .require({ url: 'missing.js' })
//     .then(function () {
//         // Success
//     }, function (error) {
//         // There was an error fetching the script
//         console.log(error);
//     });

//     basket.require({ url: 'jquery-2.0.0.min.js', key: 'jquery' });

// basket.require({ url: 'jquery.min.js', expire: 2 })
// basket.require({ url: 'jquery.min.js', execute: false });

// // fetch and cache the file
// basket.require({ url: 'jquery.min.js' });
// // fetch and cache again
// basket.require({ url: 'jquery.min.js', unique: 123 });


// var whiteCSS = 'body { background-color: white; }';
// var blackCSS = 'body { background-color: black; }';
// var duration = 1000;
// var stopped = false;
// var css = null;
// var intervalId = null;
// function start(node) {
//     css = css === whiteCSS ? blackCSS : whiteCSS;
//     stylesheet.replaceStyleSheet(node, css, function (err, style) {
//         if (err) {
//             alert(err); // For IE8. I don't like it but this should never happen.
//         } else {
//             if (!stopped) {
//                 setTimeout(function () {
//                     start(style);
//                 }, duration);
//             }
//         }
//     });
// }
// function stop() {
//     stopped = true;
// }
// start();

// stylesheet.ignoreKB262161 = false; // Toggle this for different results.
//         var TOO_MANY_STYLES = 100;
//         var css = 'body { background-color: grey }';
//         var callbacks = [];
//         var x;
//         for (x = 0; x < TOO_MANY_STYLES; x++) {
//             callbacks.push(async.apply(stylesheet.appendStyleSheet, css));
//         }
//         async.parallel(callbacks, function(err, styles) {
//             if (err) {
//                 alert(err);
//             } else {
//                 alert('Successfully created ' + styles.length);
//             }
//         });


//# sourceMappingURL=data:application/json;base64,
